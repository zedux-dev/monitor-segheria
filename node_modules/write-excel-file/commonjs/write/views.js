"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = generateViews;

var _generateCellNumber = _interopRequireDefault(require("./generateCellNumber.js"));

var _getAttributesString = _interopRequireDefault(require("../xml/getAttributesString.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function generateViews(_ref) {
  var stickyRowsCount = _ref.stickyRowsCount,
      stickyColumnsCount = _ref.stickyColumnsCount,
      showGridLines = _ref.showGridLines,
      rightToLeft = _ref.rightToLeft;

  if (!stickyRowsCount && !stickyColumnsCount && !(showGridLines === false) && !rightToLeft) {
    return '';
  }

  var views = '';
  var sheetViewAttributes = {
    tabSelected: 1,
    workbookViewId: 0
  };

  if (showGridLines === false) {
    sheetViewAttributes.showGridLines = false;
  }

  if (rightToLeft) {
    sheetViewAttributes.rightToLeft = 1;
  }

  var paneAttributes = {
    ySplit: stickyRowsCount || 0,
    xSplit: stickyColumnsCount || 0,
    topLeftCell: (0, _generateCellNumber["default"])(stickyColumnsCount || 0, (stickyRowsCount || 0) + 1),
    activePane: 'bottomRight',
    state: 'frozen'
  };
  views += '<sheetViews>';
  views += "<sheetView".concat((0, _getAttributesString["default"])(sheetViewAttributes), ">");
  views += "<pane".concat((0, _getAttributesString["default"])(paneAttributes), "/>");
  views += '</sheetView>';
  views += '</sheetViews>';
  return views;
}
//# sourceMappingURL=views.js.map