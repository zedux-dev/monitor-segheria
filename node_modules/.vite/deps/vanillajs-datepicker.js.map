{
  "version": 3,
  "sources": ["../../vanillajs-datepicker/js/lib/utils.js", "../../vanillajs-datepicker/js/lib/date.js", "../../vanillajs-datepicker/js/lib/date-format.js", "../../vanillajs-datepicker/js/lib/dom.js", "../../vanillajs-datepicker/js/lib/event.js", "../../vanillajs-datepicker/js/i18n/base-locales.js", "../../vanillajs-datepicker/js/options/defaultOptions.js", "../../vanillajs-datepicker/js/options/processOptions.js", "../../vanillajs-datepicker/js/options/shortcutKeys.js", "../../vanillajs-datepicker/js/picker/templates/pickerTemplate.js", "../../vanillajs-datepicker/js/picker/templates/daysTemplate.js", "../../vanillajs-datepicker/js/picker/templates/weekNumbersTemplate.js", "../../vanillajs-datepicker/js/picker/views/View.js", "../../vanillajs-datepicker/js/picker/views/DaysView.js", "../../vanillajs-datepicker/js/picker/views/MonthsView.js", "../../vanillajs-datepicker/js/picker/views/YearsView.js", "../../vanillajs-datepicker/js/events/functions.js", "../../vanillajs-datepicker/js/events/pickerListeners.js", "../../vanillajs-datepicker/js/picker/Picker.js", "../../vanillajs-datepicker/js/events/elementListeners.js", "../../vanillajs-datepicker/js/events/otherListeners.js", "../../vanillajs-datepicker/js/Datepicker.js", "../../vanillajs-datepicker/js/DateRangePicker.js"],
  "sourcesContent": ["export function lastItemOf(arr) {\n  return arr[arr.length - 1];\n}\n\n// push only the items not included in the array\nexport function pushUnique(arr, ...items) {\n  items.forEach((item) => {\n    if (arr.includes(item)) {\n      return;\n    }\n    arr.push(item);\n  });\n  return arr;\n}\n\nexport function stringToArray(str, separator) {\n  // convert empty string to an empty array\n  return str ? str.split(separator) : [];\n}\n\nexport function isInRange(testVal, min, max) {\n  const minOK = min === undefined || testVal >= min;\n  const maxOK = max === undefined || testVal <= max;\n  return minOK && maxOK;\n}\n\nexport function limitToRange(val, min, max) {\n  if (val < min) {\n    return min;\n  }\n  if (val > max) {\n    return max;\n  }\n  return val;\n}\n\nexport function createTagRepeat(tagName, repeat, attributes = {}, index = 0, html = '') {\n  const openTagSrc = Object.keys(attributes).reduce((src, attr) => {\n    let val = attributes[attr];\n    if (typeof val === 'function') {\n      val = val(index);\n    }\n    return `${src} ${attr}=\"${val}\"`;\n  }, tagName);\n  html += `<${openTagSrc}></${tagName}>`;\n\n  const next = index + 1;\n  return next < repeat\n    ? createTagRepeat(tagName, repeat, attributes, next, html)\n    : html;\n}\n\n// Remove the spacing surrounding tags for HTML parser not to create text nodes\n// before/after elements\nexport function optimizeTemplateHTML(html) {\n  return html.replace(/>\\s+/g, '>').replace(/\\s+</, '<');\n}\n", "export function stripTime(timeValue) {\n  return new Date(timeValue).setHours(0, 0, 0, 0);\n}\n\nexport function today() {\n  return new Date().setHours(0, 0, 0, 0);\n}\n\n// Get the time value of the start of given date or year, month and day\nexport function dateValue(...args) {\n  switch (args.length) {\n    case 0:\n      return today();\n    case 1:\n      return stripTime(args[0]);\n  }\n\n  // use setFullYear() to keep 2-digit year from being mapped to 1900-1999\n  const newDate = new Date(0);\n  newDate.setFullYear(...args);\n  return newDate.setHours(0, 0, 0, 0);\n}\n\nexport function addDays(date, amount) {\n  const newDate = new Date(date);\n  return newDate.setDate(newDate.getDate() + amount);\n}\n\nexport function addWeeks(date, amount) {\n  return addDays(date, amount * 7);\n}\n\nexport function addMonths(date, amount) {\n  // If the day of the date is not in the new month, the last day of the new\n  // month will be returned. e.g. Jan 31 + 1 month → Feb 28 (not Mar 03)\n  const newDate = new Date(date);\n  const monthsToSet = newDate.getMonth() + amount;\n  let expectedMonth = monthsToSet % 12;\n  if (expectedMonth < 0) {\n    expectedMonth += 12;\n  }\n\n  const time = newDate.setMonth(monthsToSet);\n  return newDate.getMonth() !== expectedMonth ? newDate.setDate(0) : time;\n}\n\nexport function addYears(date, amount) {\n  // If the date is Feb 29 and the new year is not a leap year, Feb 28 of the\n  // new year will be returned.\n  const newDate = new Date(date);\n  const expectedMonth = newDate.getMonth();\n  const time = newDate.setFullYear(newDate.getFullYear() + amount);\n  return expectedMonth === 1 && newDate.getMonth() === 2 ? newDate.setDate(0) : time;\n}\n\n// Calculate the distance bettwen 2 days of the week\nfunction dayDiff(day, from) {\n  return (day - from + 7) % 7;\n}\n\n// Get the date of the specified day of the week of given base date\nexport function dayOfTheWeekOf(baseDate, dayOfWeek, weekStart = 0) {\n  const baseDay = new Date(baseDate).getDay();\n  return addDays(baseDate, dayDiff(dayOfWeek, weekStart) - dayDiff(baseDay, weekStart));\n}\n\nfunction calcWeekNum(dayOfTheWeek, sameDayOfFirstWeek) {\n  return Math.round((dayOfTheWeek - sameDayOfFirstWeek) / 604800000) + 1;\n}\n\n// Get the ISO week number of a date\nexport function getIsoWeek(date) {\n  // - Start of ISO week is Monday\n  // - Use Thursday for culculation because the first Thursday of ISO week is\n  //   always in January\n  const thuOfTheWeek = dayOfTheWeekOf(date, 4, 1);\n  // - Week 1 in ISO week is the week including Jan 04\n  // - Use the Thu of given date's week (instead of given date itself) to\n  //   calculate week 1 of the year so that Jan 01 - 03 won't be miscalculated\n  //   as week 0 when Jan 04 is Mon - Wed\n  const firstThu = dayOfTheWeekOf(new Date(thuOfTheWeek).setMonth(0, 4), 4, 1);\n  // return Math.round((thuOfTheWeek - firstThu) / 604800000) + 1;\n  return calcWeekNum(thuOfTheWeek, firstThu);\n}\n\n// Calculate week number in traditional week number system\n// @see https://en.wikipedia.org/wiki/Week#Other_week_numbering_systems\nfunction calcTraditionalWeekNumber(date, weekStart) {\n  // - Week 1 of traditional week is the week including the Jan 01\n  // - Use Jan 01 of given date's year to calculate the start of week 1\n  const startOfFirstWeek = dayOfTheWeekOf(new Date(date).setMonth(0, 1), weekStart, weekStart);\n  const startOfTheWeek = dayOfTheWeekOf(date, weekStart, weekStart);\n  const weekNum = calcWeekNum(startOfTheWeek, startOfFirstWeek);\n  if (weekNum < 53) {\n    return weekNum;\n  }\n  // If the 53rd week includes Jan 01, it's actually next year's week 1\n  const weekOneOfNextYear = dayOfTheWeekOf(new Date(date).setDate(32), weekStart, weekStart);\n  return startOfTheWeek === weekOneOfNextYear ? 1 : weekNum;\n}\n\n// Get the Western traditional week number of a date\nexport function getWesternTradWeek(date) {\n  // Start of Western traditionl week is Sunday\n  return calcTraditionalWeekNumber(date, 0);\n}\n\n// Get the Middle Eastern week number of a date\nexport function getMidEasternWeek(date) {\n  // Start of Middle Eastern week is Saturday\n  return calcTraditionalWeekNumber(date, 6);\n}\n\n// Get the start year of the period of years that includes given date\n// years: length of the year period\nexport function startOfYearPeriod(date, years) {\n  /* @see https://en.wikipedia.org/wiki/Year_zero#ISO_8601 */\n  const year = new Date(date).getFullYear();\n  return Math.floor(year / years) * years;\n}\n\n// Convert date to the first/last date of the month/year of the date\nexport function regularizeDate(date, timeSpan, useLastDate) {\n  if (timeSpan !== 1 && timeSpan !== 2) {\n    return date;\n  }\n  const newDate = new Date(date);\n  if (timeSpan === 1) {\n    useLastDate\n      ? newDate.setMonth(newDate.getMonth() + 1, 0)\n      : newDate.setDate(1);\n  } else {\n    useLastDate\n      ? newDate.setFullYear(newDate.getFullYear() + 1, 0, 0)\n      : newDate.setMonth(0, 1);\n  }\n  return newDate.setHours(0, 0, 0, 0);\n}\n", "import {stripTime, today} from './date.js';\nimport {lastItemOf} from './utils.js';\n\n// pattern for format parts\nexport const reFormatTokens = /dd?|DD?|mm?|MM?|yy?(?:yy)?/;\n// pattern for non date parts\nexport const reNonDateParts = /[\\s!-/:-@[-`{-~年月日]+/;\n// cache for persed formats\nlet knownFormats = {};\n// parse funtions for date parts\nconst parseFns = {\n  y(date, year) {\n    return new Date(date).setFullYear(parseInt(year, 10));\n  },\n  m(date, month, locale) {\n    const newDate = new Date(date);\n    let monthIndex = parseInt(month, 10) - 1;\n\n    if (isNaN(monthIndex)) {\n      if (!month) {\n        return NaN;\n      }\n\n      const monthName = month.toLowerCase();\n      const compareNames = name => name.toLowerCase().startsWith(monthName);\n      // compare with both short and full names because some locales have periods\n      // in the short names (not equal to the first X letters of the full names)\n      monthIndex = locale.monthsShort.findIndex(compareNames);\n      if (monthIndex < 0) {\n        monthIndex = locale.months.findIndex(compareNames);\n      }\n      if (monthIndex < 0) {\n        return NaN;\n      }\n    }\n\n    newDate.setMonth(monthIndex);\n    return newDate.getMonth() !== normalizeMonth(monthIndex)\n      ? newDate.setDate(0)\n      : newDate.getTime();\n  },\n  d(date, day) {\n    return new Date(date).setDate(parseInt(day, 10));\n  },\n};\n// format functions for date parts\nconst formatFns = {\n  d(date) {\n    return date.getDate();\n  },\n  dd(date) {\n    return padZero(date.getDate(), 2);\n  },\n  D(date, locale) {\n    return locale.daysShort[date.getDay()];\n  },\n  DD(date, locale) {\n    return locale.days[date.getDay()];\n  },\n  m(date) {\n    return date.getMonth() + 1;\n  },\n  mm(date) {\n    return padZero(date.getMonth() + 1, 2);\n  },\n  M(date, locale) {\n    return locale.monthsShort[date.getMonth()];\n  },\n  MM(date, locale) {\n    return locale.months[date.getMonth()];\n  },\n  y(date) {\n    return date.getFullYear();\n  },\n  yy(date) {\n    return padZero(date.getFullYear(), 2).slice(-2);\n  },\n  yyyy(date) {\n    return padZero(date.getFullYear(), 4);\n  },\n};\n\n// get month index in normal range (0 - 11) from any number\nfunction normalizeMonth(monthIndex) {\n  return monthIndex > -1 ? monthIndex % 12 : normalizeMonth(monthIndex + 12);\n}\n\nfunction padZero(num, length) {\n  return num.toString().padStart(length, '0');\n}\n\nfunction parseFormatString(format) {\n  if (typeof format !== 'string') {\n    throw new Error(\"Invalid date format.\");\n  }\n  if (format in knownFormats) {\n    return knownFormats[format];\n  }\n\n  // sprit the format string into parts and seprators\n  const separators = format.split(reFormatTokens);\n  const parts = format.match(new RegExp(reFormatTokens, 'g'));\n  if (separators.length === 0 || !parts) {\n    throw new Error(\"Invalid date format.\");\n  }\n\n  // collect format functions used in the format\n  const partFormatters = parts.map(token => formatFns[token]);\n\n  // collect parse function keys used in the format\n  // iterate over parseFns' keys in order to keep the order of the keys.\n  const partParserKeys = Object.keys(parseFns).reduce((keys, key) => {\n    const token = parts.find(part => part[0] !== 'D' && part[0].toLowerCase() === key);\n    if (token) {\n      keys.push(key);\n    }\n    return keys;\n  }, []);\n\n  return knownFormats[format] = {\n    parser(dateStr, locale) {\n      const dateParts = dateStr.split(reNonDateParts).reduce((dtParts, part, index) => {\n        if (part.length > 0 && parts[index]) {\n          const token = parts[index][0];\n          if (token === 'M') {\n            dtParts.m = part;\n          } else if (token !== 'D') {\n            dtParts[token] = part;\n          }\n        }\n        return dtParts;\n      }, {});\n\n      // iterate over partParserkeys so that the parsing is made in the oder\n      // of year, month and day to prevent the day parser from correcting last\n      // day of month wrongly\n      return partParserKeys.reduce((origDate, key) => {\n        const newDate = parseFns[key](origDate, dateParts[key], locale);\n        // ingnore the part failed to parse\n        return isNaN(newDate) ? origDate : newDate;\n      }, today());\n    },\n    formatter(date, locale) {\n      let dateStr = partFormatters.reduce((str, fn, index) => {\n        return str += `${separators[index]}${fn(date, locale)}`;\n      }, '');\n      // separators' length is always parts' length + 1,\n      return dateStr += lastItemOf(separators);\n    },\n  };\n}\n\nexport function parseDate(dateStr, format, locale) {\n  if (dateStr instanceof Date || typeof dateStr === 'number') {\n    const date = stripTime(dateStr);\n    return isNaN(date) ? undefined : date;\n  }\n  if (!dateStr) {\n    return undefined;\n  }\n  if (dateStr === 'today') {\n    return today();\n  }\n\n  if (format && format.toValue) {\n    const date = format.toValue(dateStr, format, locale);\n    return isNaN(date) ? undefined : stripTime(date);\n  }\n\n  return parseFormatString(format).parser(dateStr, locale);\n}\n\nexport function formatDate(date, format, locale) {\n  if (isNaN(date) || (!date && date !== 0)) {\n    return '';\n  }\n\n  const dateObj = typeof date === 'number' ? new Date(date) : date;\n\n  if (format.toDisplay) {\n    return format.toDisplay(dateObj, format, locale);\n  }\n\n  return parseFormatString(format).formatter(dateObj, locale);\n}\n", "const range = document.createRange();\n\nexport function parseHTML(html) {\n  return range.createContextualFragment(html);\n}\n\nexport function getParent(el) {\n  return el.parentElement\n    || (el.parentNode instanceof ShadowRoot ? el.parentNode.host : undefined);\n}\n\nexport function isActiveElement(el) {\n  return el.getRootNode().activeElement === el;\n}\n\n// equivalent to jQuery's :visble\nexport function isVisible(el) {\n  return !!(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function hideElement(el) {\n  if (el.style.display === 'none') {\n    return;\n  }\n  // back up the existing display setting in data-style-display\n  if (el.style.display) {\n    el.dataset.styleDisplay = el.style.display;\n  }\n  el.style.display = 'none';\n}\n\nexport function showElement(el) {\n  if (el.style.display !== 'none') {\n    return;\n  }\n  if (el.dataset.styleDisplay) {\n    // restore backed-up dispay property\n    el.style.display = el.dataset.styleDisplay;\n    delete el.dataset.styleDisplay;\n  } else {\n    el.style.display = '';\n  }\n}\n\nexport function emptyChildNodes(el) {\n  if (el.firstChild) {\n    el.removeChild(el.firstChild);\n    emptyChildNodes(el);\n  }\n}\n\nexport function replaceChildNodes(el, newChildNodes) {\n  emptyChildNodes(el);\n  if (newChildNodes instanceof DocumentFragment) {\n    el.appendChild(newChildNodes);\n  } else if (typeof newChildNodes === 'string') {\n    el.appendChild(parseHTML(newChildNodes));\n  } else if (typeof newChildNodes.forEach === 'function') {\n    newChildNodes.forEach((node) => {\n      el.appendChild(node);\n    });\n  }\n}\n", "const listenerRegistry = new WeakMap();\nconst {addEventListener, removeEventListener} = EventTarget.prototype;\n\n// Register event listeners to a key object\n// listeners: array of listener definitions;\n//   - each definition must be a flat array of event target and the arguments\n//     used to call addEventListener() on the target\nexport function registerListeners(keyObj, listeners) {\n  let registered = listenerRegistry.get(keyObj);\n  if (!registered) {\n    registered = [];\n    listenerRegistry.set(keyObj, registered);\n  }\n  listeners.forEach((listener) => {\n    addEventListener.call(...listener);\n    registered.push(listener);\n  });\n}\n\nexport function unregisterListeners(keyObj) {\n  let listeners = listenerRegistry.get(keyObj);\n  if (!listeners) {\n    return;\n  }\n  listeners.forEach((listener) => {\n    removeEventListener.call(...listener);\n  });\n  listenerRegistry.delete(keyObj);\n}\n\n// Event.composedPath() polyfill for Edge\n// based on https://gist.github.com/kleinfreund/e9787d73776c0e3750dcfcdc89f100ec\nif (!Event.prototype.composedPath) {\n  const getComposedPath = (node, path = []) => {\n    path.push(node);\n\n    let parent;\n    if (node.parentNode) {\n      parent = node.parentNode;\n    } else if (node.host) { // ShadowRoot\n      parent = node.host;\n    } else if (node.defaultView) {  // Document\n      parent = node.defaultView;\n    }\n    return parent ? getComposedPath(parent, path) : path;\n  };\n\n  Event.prototype.composedPath = function () {\n    return getComposedPath(this.target);\n  };\n}\n\nfunction findFromPath(path, criteria, currentTarget) {\n  const [node, ...rest] = path;\n  if (criteria(node)) {\n    return node;\n  }\n  if (node === currentTarget || node.tagName === 'HTML' || rest.length === 0) {\n    // stop when reaching currentTarget or <html>\n    return;\n  }\n  return findFromPath(rest, criteria, currentTarget);\n}\n\n// Search for the actual target of a delegated event\nexport function findElementInEventPath(ev, selector) {\n  const criteria = typeof selector === 'function'\n    ? selector\n    : el => el instanceof Element && el.matches(selector);\n  return findFromPath(ev.composedPath(), criteria, ev.currentTarget);\n}\n", "// default locales\nexport default {\n  en: {\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    daysShort: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    daysMin: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    monthsShort: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n    today: \"Today\",\n    clear: \"Clear\",\n    titleFormat: \"MM y\"\n  }\n};\n", "// config options updatable by setOptions() and their default values\nexport default {\n  autohide: false,\n  beforeShowDay: null,\n  beforeShowDecade: null,\n  beforeShowMonth: null,\n  beforeShowYear: null,\n  clearButton: false,\n  dateDelimiter: ',',\n  datesDisabled: [],\n  daysOfWeekDisabled: [],\n  daysOfWeekHighlighted: [],\n  defaultViewDate: undefined, // placeholder, defaults to today() by the program\n  disableTouchKeyboard: false,\n  enableOnReadonly: true,\n  format: 'mm/dd/yyyy',\n  language: 'en',\n  maxDate: null,\n  maxNumberOfDates: 1,\n  maxView: 3,\n  minDate: null,\n  nextArrow: '»',\n  orientation: 'auto',\n  pickLevel: 0,\n  prevArrow: '«',\n  showDaysOfWeek: true,\n  showOnClick: true,\n  showOnFocus: true,\n  startView: 0,\n  title: '',\n  todayButton: false,\n  todayButtonMode: 0,\n  todayHighlight: false,\n  updateOnBlur: true,\n  weekNumbers: 0,\n  weekStart: 0,\n};\n", "import {pushUnique} from '../lib/utils.js';\nimport {\n  dateValue,\n  regularizeDate,\n  getIsoWeek,\n  getWesternTradWeek,\n  getMidEasternWeek,\n} from '../lib/date.js';\nimport {reFormatTokens, parseDate} from '../lib/date-format.js';\nimport {parseHTML} from '../lib/dom.js';\nimport defaultOptions from './defaultOptions.js';\n\nconst {\n  language: defaultLang,\n  format: defaultFormat,\n  weekStart: defaultWeekStart,\n} = defaultOptions;\n\n// Reducer function to filter out invalid day-of-week from the input\nfunction sanitizeDOW(dow, day) {\n  return dow.length < 6 && day >= 0 && day < 7\n    ? pushUnique(dow, day)\n    : dow;\n}\n\nfunction determineGetWeekMethod(numberingMode, weekStart) {\n  const methodId = numberingMode === 4\n    ? (weekStart === 6 ? 3 : !weekStart + 1)\n    : numberingMode;\n  switch (methodId) {\n    case 1:\n      return getIsoWeek;\n    case 2:\n      return getWesternTradWeek;\n    case 3:\n      return getMidEasternWeek;\n  }\n}\n\nfunction updateWeekStart(newValue, config, weekNumbers) {\n  config.weekStart = newValue;\n  config.weekEnd = (newValue + 6) % 7;\n  if (weekNumbers === 4) {\n    config.getWeekNumber = determineGetWeekMethod(4, newValue);\n  }\n  return newValue;\n}\n\n// validate input date. if invalid, fallback to the original value\nfunction validateDate(value, format, locale, origValue) {\n  const date = parseDate(value, format, locale);\n  return date !== undefined ? date : origValue;\n}\n\n// Validate viewId. if invalid, fallback to the original value\nfunction validateViewId(value, origValue, max = 3) {\n  const viewId = parseInt(value, 10);\n  return viewId >= 0 && viewId <= max ? viewId : origValue;\n}\n\nfunction replaceOptions(options, from, to, convert = undefined) {\n  if (from in options) {\n    if (!(to in options)) {\n      options[to] = convert ? convert(options[from]) : options[from];\n    }\n    delete options[from];\n  }\n}\n\n// Create Datepicker configuration to set\nexport default function processOptions(options, datepicker) {\n  const inOpts = Object.assign({}, options);\n  const config = {};\n  const locales = datepicker.constructor.locales;\n  const rangeEnd = !!datepicker.rangeSideIndex;\n  let {\n    datesDisabled,\n    format,\n    language,\n    locale,\n    maxDate,\n    maxView,\n    minDate,\n    pickLevel,\n    startView,\n    weekNumbers,\n    weekStart,\n  } = datepicker.config || {};\n\n  // for backword compatibility\n  replaceOptions(inOpts, 'calendarWeeks', 'weekNumbers', val => val ? 1 : 0);\n  replaceOptions(inOpts, 'clearBtn', 'clearButton');\n  replaceOptions(inOpts, 'todayBtn', 'todayButton');\n  replaceOptions(inOpts, 'todayBtnMode', 'todayButtonMode');\n\n  if (inOpts.language) {\n    let lang;\n    if (inOpts.language !== language) {\n      if (locales[inOpts.language]) {\n        lang = inOpts.language;\n      } else {\n        // Check if langauge + region tag can fallback to the one without\n        // region (e.g. fr-CA → fr)\n        lang = inOpts.language.split('-')[0];\n        if (!locales[lang]) {\n          lang = false;\n        }\n      }\n    }\n    delete inOpts.language;\n    if (lang) {\n      language = config.language = lang;\n\n      // update locale as well when updating language\n      const origLocale = locale || locales[defaultLang];\n      // use default language's properties for the fallback\n      locale = Object.assign({\n        format: defaultFormat,\n        weekStart: defaultWeekStart\n      }, locales[defaultLang]);\n      if (language !== defaultLang) {\n        Object.assign(locale, locales[language]);\n      }\n      config.locale = locale;\n      // if format and/or weekStart are the same as old locale's defaults,\n      // update them to new locale's defaults\n      if (format === origLocale.format) {\n        format = config.format = locale.format;\n      }\n      if (weekStart === origLocale.weekStart) {\n        weekStart = updateWeekStart(locale.weekStart, config, weekNumbers);\n      }\n    }\n  }\n\n  if (inOpts.format) {\n    const hasToDisplay = typeof inOpts.format.toDisplay === 'function';\n    const hasToValue = typeof inOpts.format.toValue === 'function';\n    const validFormatString = reFormatTokens.test(inOpts.format);\n    if ((hasToDisplay && hasToValue) || validFormatString) {\n      format = config.format = inOpts.format;\n    }\n    delete inOpts.format;\n  }\n\n  //*** pick level ***//\n  let newPickLevel = pickLevel;\n  if ('pickLevel' in inOpts) {\n    newPickLevel = validateViewId(inOpts.pickLevel, pickLevel, 2);\n    delete inOpts.pickLevel;\n  }\n  if (newPickLevel !== pickLevel) {\n    if (newPickLevel > pickLevel) {\n      // complement current minDate/madDate so that the existing range will be\n      // expanded to fit the new level later\n      if (!('minDate' in inOpts)) {\n        inOpts.minDate = minDate;\n      }\n      if (!('maxDate' in inOpts)) {\n        inOpts.maxDate = maxDate;\n      }\n    }\n    // complement datesDisabled so that it will be reset later\n    if (datesDisabled && !inOpts.datesDisabled) {\n      inOpts.datesDisabled = [];\n    }\n    pickLevel = config.pickLevel = newPickLevel;\n  }\n\n  //*** dates ***//\n  // while min and maxDate for \"no limit\" in the options are better to be null\n  // (especially when updating), the ones in the config have to be undefined\n  // because null is treated as 0 (= unix epoch) when comparing with time value\n  let minDt = minDate;\n  let maxDt = maxDate;\n  if ('minDate' in inOpts) {\n    const defaultMinDt = dateValue(0, 0, 1);\n    minDt = inOpts.minDate === null\n      ? defaultMinDt  // set 0000-01-01 to prevent negative values for year\n      : validateDate(inOpts.minDate, format, locale, minDt);\n    if (minDt !== defaultMinDt) {\n      minDt = regularizeDate(minDt, pickLevel, false);\n    }\n    delete inOpts.minDate;\n  }\n  if ('maxDate' in inOpts) {\n    maxDt = inOpts.maxDate === null\n      ? undefined\n      : validateDate(inOpts.maxDate, format, locale, maxDt);\n    if (maxDt !== undefined) {\n      maxDt = regularizeDate(maxDt, pickLevel, true);\n    }\n    delete inOpts.maxDate;\n  }\n  if (maxDt < minDt) {\n    minDate = config.minDate = maxDt;\n    maxDate = config.maxDate = minDt;\n  } else {\n    if (minDate !== minDt) {\n      minDate = config.minDate = minDt;\n    }\n    if (maxDate !== maxDt) {\n      maxDate = config.maxDate = maxDt;\n    }\n  }\n\n  if (inOpts.datesDisabled) {\n    const dtsDisabled = inOpts.datesDisabled;\n    if (typeof dtsDisabled === 'function') {\n      config.datesDisabled = null;\n      config.checkDisabled = (timeValue, viewId) => dtsDisabled(\n        new Date(timeValue),\n        viewId,\n        rangeEnd\n      );\n    } else {\n      const disabled = config.datesDisabled = dtsDisabled.reduce((dates, dt) => {\n        const date = parseDate(dt, format, locale);\n        return date !== undefined\n          ? pushUnique(dates, regularizeDate(date, pickLevel, rangeEnd))\n          : dates;\n      }, []);\n      config.checkDisabled = timeValue => disabled.includes(timeValue);\n    }\n    delete inOpts.datesDisabled;\n  }\n  if ('defaultViewDate' in inOpts) {\n    const viewDate = parseDate(inOpts.defaultViewDate, format, locale);\n    if (viewDate !== undefined) {\n      config.defaultViewDate = viewDate;\n    }\n    delete inOpts.defaultViewDate;\n  }\n\n  //*** days of week ***//\n  if ('weekStart' in inOpts) {\n    const wkStart = Number(inOpts.weekStart) % 7;\n    if (!isNaN(wkStart)) {\n      weekStart = updateWeekStart(wkStart, config, weekNumbers);\n    }\n    delete inOpts.weekStart;\n  }\n  if (inOpts.daysOfWeekDisabled) {\n    config.daysOfWeekDisabled = inOpts.daysOfWeekDisabled.reduce(sanitizeDOW, []);\n    delete inOpts.daysOfWeekDisabled;\n  }\n  if (inOpts.daysOfWeekHighlighted) {\n    config.daysOfWeekHighlighted = inOpts.daysOfWeekHighlighted.reduce(sanitizeDOW, []);\n    delete inOpts.daysOfWeekHighlighted;\n  }\n\n  //*** week numbers ***//\n  if ('weekNumbers' in inOpts) {\n    let method = inOpts.weekNumbers;\n    if (method) {\n      const getWeekNumber = typeof method === 'function'\n        ? (timeValue, startOfWeek) => method(new Date(timeValue), startOfWeek)\n        : determineGetWeekMethod((method = parseInt(method, 10)), weekStart);\n      if (getWeekNumber) {\n        weekNumbers = config.weekNumbers = method;\n        config.getWeekNumber = getWeekNumber;\n      }\n    } else {\n      weekNumbers = config.weekNumbers = 0;\n      config.getWeekNumber = null;\n    }\n    delete inOpts.weekNumbers;\n  }\n\n  //*** multi date ***//\n  if ('maxNumberOfDates' in inOpts) {\n    const maxNumberOfDates = parseInt(inOpts.maxNumberOfDates, 10);\n    if (maxNumberOfDates >= 0) {\n      config.maxNumberOfDates = maxNumberOfDates;\n      config.multidate = maxNumberOfDates !== 1;\n    }\n    delete inOpts.maxNumberOfDates;\n  }\n  if (inOpts.dateDelimiter) {\n    config.dateDelimiter = String(inOpts.dateDelimiter);\n    delete inOpts.dateDelimiter;\n  }\n\n  //*** view ***//\n  let newMaxView = maxView;\n  if ('maxView' in inOpts) {\n    newMaxView = validateViewId(inOpts.maxView, maxView);\n    delete inOpts.maxView;\n  }\n  // ensure max view >= pick level\n  newMaxView = pickLevel > newMaxView ? pickLevel : newMaxView;\n  if (newMaxView !== maxView) {\n    maxView = config.maxView = newMaxView;\n  }\n\n  let newStartView = startView;\n  if ('startView' in inOpts) {\n    newStartView = validateViewId(inOpts.startView, newStartView);\n    delete inOpts.startView;\n  }\n  // ensure pick level <= start view <= max view\n  if (newStartView < pickLevel) {\n    newStartView = pickLevel;\n  } else if (newStartView > maxView) {\n    newStartView = maxView;\n  }\n  if (newStartView !== startView) {\n    config.startView = newStartView;\n  }\n\n  //*** template ***//\n  if (inOpts.prevArrow) {\n    const prevArrow = parseHTML(inOpts.prevArrow);\n    if (prevArrow.childNodes.length > 0) {\n      config.prevArrow = prevArrow.childNodes;\n    }\n    delete inOpts.prevArrow;\n  }\n  if (inOpts.nextArrow) {\n    const nextArrow = parseHTML(inOpts.nextArrow);\n    if (nextArrow.childNodes.length > 0) {\n      config.nextArrow = nextArrow.childNodes;\n    }\n    delete inOpts.nextArrow;\n  }\n\n  //*** misc ***//\n  if ('disableTouchKeyboard' in inOpts) {\n    config.disableTouchKeyboard = 'ontouchstart' in document && !!inOpts.disableTouchKeyboard;\n    delete inOpts.disableTouchKeyboard;\n  }\n  if (inOpts.orientation) {\n    const orientation = inOpts.orientation.toLowerCase().split(/\\s+/g);\n    config.orientation = {\n      x: orientation.find(x => (x === 'left' || x === 'right')) || 'auto',\n      y: orientation.find(y => (y === 'top' || y === 'bottom')) || 'auto',\n    };\n    delete inOpts.orientation;\n  }\n  if ('todayButtonMode' in inOpts) {\n    switch(inOpts.todayButtonMode) {\n      case 0:\n      case 1:\n        config.todayButtonMode = inOpts.todayButtonMode;\n    }\n    delete inOpts.todayButtonMode;\n  }\n\n  //*** copy the rest ***//\n  Object.entries(inOpts).forEach(([key, value]) => {\n    if (value !== undefined && key in defaultOptions) {\n      config[key] = value;\n    }\n  });\n\n  return config;\n}\n", "const defaultShortcutKeys = {\n  show: {key: 'ArrowDown'},\n  hide: null,\n  toggle: {key: 'Escape'},\n  prevButton: {key: 'ArrowLeft', ctrlOrMetaKey: true},\n  nextButton: {key: 'ArrowRight', ctrlOrMetaKey: true},\n  viewSwitch: {key: 'ArrowUp', ctrlOrMetaKey: true},\n  clearButton: {key: 'Backspace', ctrlOrMetaKey: true},\n  todayButton: {key: '.', ctrlOrMetaKey: true},\n  exitEditMode: {key: 'ArrowDown', ctrlOrMetaKey: true},\n};\n\nexport default function createShortcutKeyConfig(options) {\n  return Object.keys(defaultShortcutKeys).reduce((keyDefs, shortcut) => {\n    const keyDef = options[shortcut] === undefined\n      ? defaultShortcutKeys[shortcut]\n      : options[shortcut];\n    const key = keyDef && keyDef.key;\n    if (!key || typeof key !== 'string') {\n      return keyDefs;\n    }\n\n    const normalizedDef = {\n      key,\n      ctrlOrMetaKey: !!(keyDef.ctrlOrMetaKey || keyDef.ctrlKey || keyDef.metaKey),\n    };\n    if (key.length > 1) {\n      normalizedDef.altKey = !!keyDef.altKey;\n      normalizedDef.shiftKey = !!keyDef.shiftKey;\n    }\n    keyDefs[shortcut] = normalizedDef;\n    return keyDefs;\n  }, {});\n}\n", "import {optimizeTemplateHTML} from '../../lib/utils.js';\n\nconst getButtons = buttonList => buttonList\n  .map(classes => `<button type=\"button\" class=\"%buttonClass% ${classes}\" tabindex=\"-1\"></button>`)\n  .join('');\n\nexport default optimizeTemplateHTML(`<div class=\"datepicker\">\n  <div class=\"datepicker-picker\">\n    <div class=\"datepicker-header\">\n      <div class=\"datepicker-title\"></div>\n      <div class=\"datepicker-controls\">\n        ${getButtons([\n          'prev-button prev-btn',\n          'view-switch',\n          'next-button next-btn',\n        ])}\n      </div>\n    </div>\n    <div class=\"datepicker-main\"></div>\n    <div class=\"datepicker-footer\">\n      <div class=\"datepicker-controls\">\n        ${getButtons([\n          'today-button today-btn',\n          'clear-button clear-btn',\n        ])}\n      </div>\n    </div>\n  </div>\n</div>`);\n", "import {createTagRepeat, optimizeTemplateHTML} from '../../lib/utils.js';\n\nexport default optimizeTemplateHTML(`<div class=\"days\">\n  <div class=\"days-of-week\">${createTagRepeat('span', 7, {class: 'dow'})}</div>\n  <div class=\"datepicker-grid\">${createTagRepeat('span', 42)}</div>\n</div>`);\n", "import {createTagRepeat, optimizeTemplateHTML} from '../../lib/utils.js';\n\nexport default optimizeTemplateHTML(`<div class=\"week-numbers calendar-weeks\">\n  <div class=\"days-of-week\"><span class=\"dow\"></span></div>\n  <div class=\"weeks\">${createTagRepeat('span', 6, {class: 'week'})}</div>\n</div>`);\n\n", "import {pushUnique} from '../../lib/utils.js';\nimport {parseHTML, replaceChildNodes} from '../../lib/dom.js';\n\n// Base class of the view classes\nexport default class View {\n  constructor(picker, config) {\n    Object.assign(this, config, {\n      picker,\n      element: parseHTML(`<div class=\"datepicker-view\"></div>`).firstChild,\n      selected: [],\n      isRangeEnd: !!picker.datepicker.rangeSideIndex,\n    });\n    this.init(this.picker.datepicker.config);\n  }\n\n  init(options) {\n    if ('pickLevel' in options) {\n      this.isMinView = this.id === options.pickLevel;\n    }\n    this.setOptions(options);\n    this.updateFocus();\n    this.updateSelection();\n  }\n\n  prepareForRender(switchLabel, prevButtonDisabled, nextButtonDisabled) {\n    // refresh disabled years on every render in order to clear the ones added\n    // by beforeShow hook at previous render\n    this.disabled = [];\n\n    const picker = this.picker;\n    picker.setViewSwitchLabel(switchLabel);\n    picker.setPrevButtonDisabled(prevButtonDisabled);\n    picker.setNextButtonDisabled(nextButtonDisabled);\n  }\n\n  setDisabled(date, classList) {\n    classList.add('disabled');\n    pushUnique(this.disabled, date);\n  }\n\n  // Execute beforeShow() callback and apply the result to the element\n  // args:\n  performBeforeHook(el, timeValue) {\n    let result = this.beforeShow(new Date(timeValue));\n    switch (typeof result) {\n      case 'boolean':\n        result = {enabled: result};\n        break;\n      case 'string':\n        result = {classes: result};\n    }\n\n    if (result) {\n      const classList = el.classList;\n      if (result.enabled === false) {\n        this.setDisabled(timeValue, classList);\n      }\n      if (result.classes) {\n        const extraClasses = result.classes.split(/\\s+/);\n        classList.add(...extraClasses);\n        if (extraClasses.includes('disabled')) {\n          this.setDisabled(timeValue, classList);\n        }\n      }\n      if (result.content) {\n        replaceChildNodes(el, result.content);\n      }\n    }\n  }\n\n  renderCell(el, content, cellVal, date, {selected, range}, outOfScope, extraClasses = []) {\n    el.textContent = content;\n    if (this.isMinView) {\n      el.dataset.date = date;\n    }\n\n    const classList = el.classList;\n    el.className = `datepicker-cell ${this.cellClass}`;\n    if (cellVal < this.first) {\n      classList.add('prev');\n    } else if (cellVal > this.last) {\n      classList.add('next');\n    }\n    classList.add(...extraClasses);\n    if (outOfScope || this.checkDisabled(date, this.id)) {\n      this.setDisabled(date, classList);\n    }\n    if (range) {\n      const [rangeStart, rangeEnd] = range;\n      if (cellVal > rangeStart && cellVal < rangeEnd) {\n        classList.add('range');\n      }\n      if (cellVal === rangeStart) {\n        classList.add('range-start');\n      }\n      if (cellVal === rangeEnd) {\n        classList.add('range-end');\n      }\n    }\n    if (selected.includes(cellVal)) {\n      classList.add('selected');\n    }\n    if (cellVal === this.focused) {\n      classList.add('focused');\n    }\n\n    if (this.beforeShow) {\n      this.performBeforeHook(el, date);\n    }\n  }\n\n  refreshCell(el, cellVal, selected, [rangeStart, rangeEnd]) {\n    const classList = el.classList;\n    classList.remove('range', 'range-start', 'range-end', 'selected', 'focused');\n    if (cellVal > rangeStart && cellVal < rangeEnd) {\n      classList.add('range');\n    }\n    if (cellVal === rangeStart) {\n      classList.add('range-start');\n    }\n    if (cellVal === rangeEnd) {\n      classList.add('range-end');\n    }\n    if (selected.includes(cellVal)) {\n      classList.add('selected');\n    }\n    if (cellVal === this.focused) {\n      classList.add('focused');\n    }\n  }\n\n  changeFocusedCell(cellIndex) {\n    this.grid.querySelectorAll('.focused').forEach((el) => {\n      el.classList.remove('focused');\n    });\n    this.grid.children[cellIndex].classList.add('focused');\n  }\n}\n", "import {today, dateValue, addDays, addWeeks, dayOfTheWeekOf} from '../../lib/date.js';\nimport {formatDate} from '../../lib/date-format.js';\nimport {parseHTML, showElement, hideElement} from '../../lib/dom.js';\nimport daysTemplate from '../templates/daysTemplate.js';\nimport weekNumbersTemplate from '../templates/weekNumbersTemplate.js';\nimport View from './View.js';\n\nexport default class DaysView extends View {\n  constructor(picker) {\n    super(picker, {\n      id: 0,\n      name: 'days',\n      cellClass: 'day',\n    });\n  }\n\n  init(options, onConstruction = true) {\n    if (onConstruction) {\n      const inner = parseHTML(daysTemplate).firstChild;\n      this.dow = inner.firstChild;\n      this.grid = inner.lastChild;\n      this.element.appendChild(inner);\n    }\n    super.init(options);\n  }\n\n  setOptions(options) {\n    let updateDOW;\n\n    if ('minDate' in options) {\n      this.minDate = options.minDate;\n    }\n    if ('maxDate' in options) {\n      this.maxDate = options.maxDate;\n    }\n    if (options.checkDisabled) {\n      this.checkDisabled = options.checkDisabled;\n    }\n    if (options.daysOfWeekDisabled) {\n      this.daysOfWeekDisabled = options.daysOfWeekDisabled;\n      updateDOW = true;\n    }\n    if (options.daysOfWeekHighlighted) {\n      this.daysOfWeekHighlighted = options.daysOfWeekHighlighted;\n    }\n    if ('todayHighlight' in options) {\n      this.todayHighlight = options.todayHighlight;\n    }\n    if ('weekStart' in options) {\n      this.weekStart = options.weekStart;\n      this.weekEnd = options.weekEnd;\n      updateDOW = true;\n    }\n    if (options.locale) {\n      const locale = this.locale = options.locale;\n      this.dayNames = locale.daysMin;\n      this.switchLabelFormat = locale.titleFormat;\n      updateDOW = true;\n    }\n    if ('beforeShowDay' in options) {\n      this.beforeShow = typeof options.beforeShowDay === 'function'\n        ? options.beforeShowDay\n        : undefined;\n    }\n\n    if ('weekNumbers' in options) {\n      if (options.weekNumbers && !this.weekNumbers) {\n        const weeksElem = parseHTML(weekNumbersTemplate).firstChild;\n        this.weekNumbers = {\n          element: weeksElem,\n          dow: weeksElem.firstChild,\n          weeks: weeksElem.lastChild,\n        };\n        this.element.insertBefore(weeksElem, this.element.firstChild);\n      } else if (this.weekNumbers && !options.weekNumbers) {\n        this.element.removeChild(this.weekNumbers.element);\n        this.weekNumbers = null;\n      }\n    }\n\n    if ('getWeekNumber' in options) {\n      this.getWeekNumber = options.getWeekNumber;\n    }\n\n    if ('showDaysOfWeek' in options) {\n      if (options.showDaysOfWeek) {\n        showElement(this.dow);\n        if (this.weekNumbers) {\n          showElement(this.weekNumbers.dow);\n        }\n      } else {\n        hideElement(this.dow);\n        if (this.weekNumbers) {\n          hideElement(this.weekNumbers.dow);\n        }\n      }\n    }\n\n    // update days-of-week when locale, daysOfweekDisabled or weekStart is changed\n    if (updateDOW) {\n      Array.from(this.dow.children).forEach((el, index) => {\n        const dow = (this.weekStart + index) % 7;\n        el.textContent = this.dayNames[dow];\n        el.className = this.daysOfWeekDisabled.includes(dow) ? 'dow disabled' : 'dow';\n      });\n    }\n  }\n\n  // Apply update on the focused date to view's settings\n  updateFocus() {\n    const viewDate = new Date(this.picker.viewDate);\n    const viewYear = viewDate.getFullYear();\n    const viewMonth = viewDate.getMonth();\n    const firstOfMonth = dateValue(viewYear, viewMonth, 1);\n    const start = dayOfTheWeekOf(firstOfMonth, this.weekStart, this.weekStart);\n\n    this.first = firstOfMonth;\n    this.last = dateValue(viewYear, viewMonth + 1, 0);\n    this.start = start;\n    this.focused = this.picker.viewDate;\n  }\n\n  // Apply update on the selected dates to view's settings\n  updateSelection() {\n    const {dates, rangepicker} = this.picker.datepicker;\n    this.selected = dates;\n    if (rangepicker) {\n      this.range = rangepicker.dates;\n    }\n  }\n\n   // Update the entire view UI\n  render() {\n    // update today marker on ever render\n    this.today = this.todayHighlight ? today() : undefined;\n\n    this.prepareForRender(\n      formatDate(this.focused, this.switchLabelFormat, this.locale),\n      this.first <= this.minDate,\n      this.last >= this.maxDate\n    );\n\n    if (this.weekNumbers) {\n      const weekStart = this.weekStart;\n      const startOfWeek = dayOfTheWeekOf(this.first, weekStart, weekStart);\n      Array.from(this.weekNumbers.weeks.children).forEach((el, index) => {\n        const dateOfWeekStart = addWeeks(startOfWeek, index);\n        el.textContent = this.getWeekNumber(dateOfWeekStart, weekStart);\n        if (index > 3) {\n          el.classList[dateOfWeekStart > this.last ? 'add' : 'remove']('next');\n        }\n      });\n    }\n    Array.from(this.grid.children).forEach((el, index) => {\n      const current = addDays(this.start, index);\n      const dateObj = new Date(current);\n      const day = dateObj.getDay();\n      const extraClasses = [];\n\n      if (this.today === current) {\n        extraClasses.push('today');\n      }\n      if (this.daysOfWeekHighlighted.includes(day)) {\n        extraClasses.push('highlighted');\n      }\n\n      this.renderCell(\n        el,\n        dateObj.getDate(),\n        current,\n        current,\n        this,\n        current < this.minDate\n          || current > this.maxDate\n          || this.daysOfWeekDisabled.includes(day),\n        extraClasses\n      );\n    });\n  }\n\n  // Update the view UI by applying the changes of selected and focused items\n  refresh() {\n    const range = this.range || [];\n    Array.from(this.grid.children).forEach((el) => {\n      this.refreshCell(el, Number(el.dataset.date), this.selected, range);\n    });\n  }\n\n  // Update the view UI by applying the change of focused item\n  refreshFocus() {\n    this.changeFocusedCell(Math.round((this.focused - this.start) / 86400000));\n  }\n}\n", "import {pushUnique, createTagRepeat} from '../../lib/utils.js';\nimport {dateValue, regularizeDate} from '../../lib/date.js';\nimport {parseHTML} from '../../lib/dom.js';\nimport View from './View.js';\n\nfunction computeMonthRange(range, thisYear) {\n  if (!range || !range[0] || !range[1]) {\n    return;\n  }\n\n  const [[startY, startM], [endY, endM]] = range;\n  if (startY > thisYear || endY < thisYear) {\n    return;\n  }\n  return [\n    startY === thisYear ? startM : -1,\n    endY === thisYear ? endM : 12,\n  ];\n}\n\nexport default class MonthsView extends View {\n  constructor(picker) {\n    super(picker, {\n      id: 1,\n      name: 'months',\n      cellClass: 'month',\n    });\n  }\n\n  init(options, onConstruction = true) {\n    if (onConstruction) {\n      this.grid = this.element;\n      this.element.classList.add('months', 'datepicker-grid');\n      this.grid.appendChild(parseHTML(createTagRepeat('span', 12, {'data-month': ix => ix})));\n      this.first = 0;\n      this.last = 11;\n    }\n    super.init(options);\n  }\n\n  setOptions(options) {\n    if (options.locale) {\n      this.monthNames = options.locale.monthsShort;\n    }\n    if ('minDate' in options) {\n      if (options.minDate === undefined) {\n        this.minYear = this.minMonth = this.minDate = undefined;\n      } else {\n        const minDateObj = new Date(options.minDate);\n        this.minYear = minDateObj.getFullYear();\n        this.minMonth = minDateObj.getMonth();\n        this.minDate = minDateObj.setDate(1);\n      }\n    }\n    if ('maxDate' in options) {\n      if (options.maxDate === undefined) {\n        this.maxYear = this.maxMonth = this.maxDate = undefined;\n      } else {\n        const maxDateObj = new Date(options.maxDate);\n        this.maxYear = maxDateObj.getFullYear();\n        this.maxMonth = maxDateObj.getMonth();\n        this.maxDate = dateValue(this.maxYear, this.maxMonth + 1, 0);\n      }\n    }\n    if (options.checkDisabled) {\n      this.checkDisabled = this.isMinView || options.datesDisabled === null\n        ? options.checkDisabled\n        : () => false;\n    }\n    if ('beforeShowMonth' in options) {\n      this.beforeShow = typeof options.beforeShowMonth === 'function'\n        ? options.beforeShowMonth\n        : undefined;\n    }\n  }\n\n  // Update view's settings to reflect the viewDate set on the picker\n  updateFocus() {\n    const viewDate = new Date(this.picker.viewDate);\n    this.year = viewDate.getFullYear();\n    this.focused = viewDate.getMonth();\n  }\n\n  // Update view's settings to reflect the selected dates\n  updateSelection() {\n    const {dates, rangepicker} = this.picker.datepicker;\n    this.selected = dates.reduce((selected, timeValue) => {\n      const date = new Date(timeValue);\n      const year = date.getFullYear();\n      const month = date.getMonth();\n      if (selected[year] === undefined) {\n        selected[year] = [month];\n      } else {\n        pushUnique(selected[year], month);\n      }\n      return selected;\n    }, {});\n    if (rangepicker && rangepicker.dates) {\n      this.range = rangepicker.dates.map(timeValue => {\n        const date = new Date(timeValue);\n        return isNaN(date) ? undefined : [date.getFullYear(), date.getMonth()];\n      });\n    }\n  }\n\n  // Update the entire view UI\n  render() {\n    this.prepareForRender(\n      this.year,\n      this.year <= this.minYear,\n      this.year >= this.maxYear\n    );\n\n    const selected = this.selected[this.year] || [];\n    const yrOutOfRange = this.year < this.minYear || this.year > this.maxYear;\n    const isMinYear = this.year === this.minYear;\n    const isMaxYear = this.year === this.maxYear;\n    const range = computeMonthRange(this.range, this.year);\n\n    Array.from(this.grid.children).forEach((el, index) => {\n      const date = regularizeDate(new Date(this.year, index, 1), 1, this.isRangeEnd);\n\n      this.renderCell(\n        el,\n        this.monthNames[index],\n        index,\n        date,\n        {selected, range},\n        yrOutOfRange\n          || isMinYear && index < this.minMonth\n          || isMaxYear && index > this.maxMonth\n      );\n    });\n  }\n\n  // Update the view UI by applying the changes of selected and focused items\n  refresh() {\n    const selected = this.selected[this.year] || [];\n    const range = computeMonthRange(this.range, this.year) || [];\n    Array.from(this.grid.children).forEach((el, index) => {\n      this.refreshCell(el, index, selected, range);\n    });\n  }\n\n  // Update the view UI by applying the change of focused item\n  refreshFocus() {\n    this.changeFocusedCell(this.focused);\n  }\n}", "import {pushUnique, createTagRepeat} from '../../lib/utils.js';\nimport {dateValue, regularizeDate, startOfYearPeriod} from '../../lib/date.js';\nimport {parseHTML} from '../../lib/dom.js';\nimport View from './View.js';\n\nfunction toTitleCase(word) {\n  return [...word].reduce((str, ch, ix) => str += ix ? ch : ch.toUpperCase(), '');\n}\n\n// Class representing the years and decades view elements\nexport default class YearsView extends View {\n  constructor(picker, config) {\n    super(picker, config);\n  }\n\n  init(options, onConstruction = true) {\n    if (onConstruction) {\n      this.navStep = this.step * 10;\n      this.beforeShowOption = `beforeShow${toTitleCase(this.cellClass)}`;\n      this.grid = this.element;\n      this.element.classList.add(this.name, 'datepicker-grid');\n      this.grid.appendChild(parseHTML(createTagRepeat('span', 12)));\n    }\n    super.init(options);\n  }\n\n  setOptions(options) {\n    if ('minDate' in options) {\n      if (options.minDate === undefined) {\n        this.minYear = this.minDate = undefined;\n      } else {\n        this.minYear = startOfYearPeriod(options.minDate, this.step);\n        this.minDate = dateValue(this.minYear, 0, 1);\n      }\n    }\n    if ('maxDate' in options) {\n      if (options.maxDate === undefined) {\n        this.maxYear = this.maxDate = undefined;\n      } else {\n        this.maxYear = startOfYearPeriod(options.maxDate, this.step);\n        this.maxDate = dateValue(this.maxYear, 11, 31);\n      }\n    }\n    if (options.checkDisabled) {\n      this.checkDisabled = this.isMinView || options.datesDisabled === null\n        ? options.checkDisabled\n        : () => false;\n    }\n    if (this.beforeShowOption in options) {\n      const beforeShow = options[this.beforeShowOption];\n      this.beforeShow = typeof beforeShow === 'function' ? beforeShow : undefined;\n    }\n  }\n\n  // Update view's settings to reflect the viewDate set on the picker\n  updateFocus() {\n    const viewDate = new Date(this.picker.viewDate);\n    const first = startOfYearPeriod(viewDate, this.navStep);\n    const last = first + 9 * this.step;\n\n    this.first = first;\n    this.last = last;\n    this.start = first - this.step;\n    this.focused = startOfYearPeriod(viewDate, this.step);\n  }\n\n  // Update view's settings to reflect the selected dates\n  updateSelection() {\n    const {dates, rangepicker} = this.picker.datepicker;\n    this.selected = dates.reduce((years, timeValue) => {\n      return pushUnique(years, startOfYearPeriod(timeValue, this.step));\n    }, []);\n    if (rangepicker && rangepicker.dates) {\n      this.range = rangepicker.dates.map(timeValue => {\n        if (timeValue !== undefined) {\n          return startOfYearPeriod(timeValue, this.step);\n        }\n      });\n    }\n  }\n\n  // Update the entire view UI\n  render() {\n    this.prepareForRender(\n      `${this.first}-${this.last}`,\n      this.first <= this.minYear,\n      this.last >= this.maxYear\n    );\n\n    Array.from(this.grid.children).forEach((el, index) => {\n      const current = this.start + (index * this.step);\n      const date = regularizeDate(new Date(current, 0, 1), 2, this.isRangeEnd);\n\n      el.dataset.year = current;\n      this.renderCell(\n        el,\n        current,\n        current,\n        date,\n        this,\n        current < this.minYear || current > this.maxYear\n      );\n    });\n  }\n\n  // Update the view UI by applying the changes of selected and focused items\n  refresh() {\n    const range = this.range || [];\n    Array.from(this.grid.children).forEach((el) => {\n      this.refreshCell(el, Number(el.textContent), this.selected, range);\n    });\n  }\n\n  // Update the view UI by applying the change of focused item\n  refreshFocus() {\n    this.changeFocusedCell(Math.round((this.focused - this.start) / this.step));\n  }\n}\n", "import {limitToRange} from '../lib/utils.js';\nimport {today, addMonths, addYears} from '../lib/date.js';\nimport {isActiveElement} from '../lib/dom.js';\n\nexport function triggerDatepickerEvent(datepicker, type) {\n  const options = {\n    bubbles: true,\n    cancelable: true,\n    detail: {\n      date: datepicker.getDate(),\n      viewDate: new Date(datepicker.picker.viewDate),\n      viewId: datepicker.picker.currentView.id,\n      datepicker,\n    },\n  };\n  datepicker.element.dispatchEvent(new CustomEvent(type, options));\n}\n\n// direction: -1 (to previous), 1 (to next)\nexport function goToPrevOrNext(datepicker, direction) {\n  const {config, picker} = datepicker;\n  const {currentView, viewDate} = picker;\n  let newViewDate;\n  switch (currentView.id) {\n    case 0:\n      newViewDate = addMonths(viewDate, direction);\n      break;\n    case 1:\n      newViewDate = addYears(viewDate, direction);\n      break;\n    default:\n      newViewDate = addYears(viewDate, direction * currentView.navStep);\n  }\n  newViewDate = limitToRange(newViewDate, config.minDate, config.maxDate);\n  picker.changeFocus(newViewDate).render();\n}\n\nexport function switchView(datepicker) {\n  const viewId = datepicker.picker.currentView.id;\n  if (viewId === datepicker.config.maxView) {\n    return;\n  }\n  datepicker.picker.changeView(viewId + 1).render();\n}\n\nexport function clearSelection(datepicker) {\n  datepicker.setDate({clear: true});\n}\n\nexport function goToOrSelectToday(datepicker) {\n  const currentDate = today();\n  if (datepicker.config.todayButtonMode === 1) {\n    datepicker.setDate(currentDate, {forceRefresh: true, viewDate: currentDate});\n  } else {\n    datepicker.setFocusedDate(currentDate, true);\n  }\n}\n\nexport function unfocus(datepicker) {\n  const onBlur = () => {\n    if (datepicker.config.updateOnBlur) {\n      datepicker.update({revert: true});\n    } else {\n      datepicker.refresh('input');\n    }\n    datepicker.hide();\n  };\n  const element = datepicker.element;\n\n  if (isActiveElement(element)) {\n    element.addEventListener('blur', onBlur, {once: true});\n  } else {\n    onBlur();\n  }\n}\n", "import {addMonths, addYears} from '../lib/date.js';\nimport {findElementInEventPath} from '../lib/event.js';\nimport {goToPrevOrNext, switchView} from './functions.js';\n\nfunction goToSelectedMonthOrYear(datepicker, selection) {\n  const picker = datepicker.picker;\n  const viewDate = new Date(picker.viewDate);\n  const viewId = picker.currentView.id;\n  const newDate = viewId === 1\n    ? addMonths(viewDate, selection - viewDate.getMonth())\n    : addYears(viewDate, selection - viewDate.getFullYear());\n\n  picker.changeFocus(newDate).changeView(viewId - 1).render();\n}\n\nexport function onClickViewSwitch(datepicker) {\n  switchView(datepicker);\n}\n\nexport function onClickPrevButton(datepicker) {\n  goToPrevOrNext(datepicker, -1);\n}\n\nexport function onClickNextButton(datepicker) {\n  goToPrevOrNext(datepicker, 1);\n}\n\n// For the picker's main block to delegete the events from `datepicker-cell`s\nexport function onClickView(datepicker, ev) {\n  const target = findElementInEventPath(ev, '.datepicker-cell');\n  if (!target || target.classList.contains('disabled')) {\n    return;\n  }\n\n  const {id, isMinView} = datepicker.picker.currentView;\n  const data = target.dataset;\n  if (isMinView) {\n    datepicker.setDate(Number(data.date));\n  } else if (id === 1) {\n    goToSelectedMonthOrYear(datepicker, Number(data.month));\n  } else {\n    goToSelectedMonthOrYear(datepicker, Number(data.year));\n  }\n}\n\nexport function onMousedownPicker(ev) {\n  ev.preventDefault();\n}\n", "import {lastItemOf, isInRange, limitToRange} from '../lib/utils.js';\nimport {today, regularizeDate} from '../lib/date.js';\nimport {\n  parseHTML,\n  getParent,\n  showElement,\n  hideElement,\n  emptyChildNodes,\n} from '../lib/dom.js';\nimport {registerListeners} from '../lib/event.js';\nimport pickerTemplate from './templates/pickerTemplate.js';\nimport DaysView from './views/DaysView.js';\nimport MonthsView from './views/MonthsView.js';\nimport YearsView from './views/YearsView.js';\nimport {\n  triggerDatepickerEvent,\n  clearSelection,\n  goToOrSelectToday,\n} from '../events/functions.js';\nimport {\n  onClickViewSwitch,\n  onClickPrevButton,\n  onClickNextButton,\n  onClickView,\n  onMousedownPicker,\n} from '../events/pickerListeners.js';\n\nconst orientClasses = ['left', 'top', 'right', 'bottom'].reduce((obj, key) => {\n  obj[key] = `datepicker-orient-${key}`;\n  return obj;\n}, {});\nconst toPx = num => num ? `${num}px` : num;\n\nfunction processPickerOptions(picker, options) {\n  if ('title' in options) {\n    if (options.title) {\n      picker.controls.title.textContent = options.title;\n      showElement(picker.controls.title);\n    } else {\n      picker.controls.title.textContent = '';\n      hideElement(picker.controls.title);\n    }\n  }\n  if (options.prevArrow) {\n    const prevButton = picker.controls.prevButton;\n    emptyChildNodes(prevButton);\n    options.prevArrow.forEach((node) => {\n      prevButton.appendChild(node.cloneNode(true));\n    });\n  }\n  if (options.nextArrow) {\n    const nextButton = picker.controls.nextButton;\n    emptyChildNodes(nextButton);\n    options.nextArrow.forEach((node) => {\n      nextButton.appendChild(node.cloneNode(true));\n    });\n  }\n  if (options.locale) {\n    picker.controls.todayButton.textContent = options.locale.today;\n    picker.controls.clearButton.textContent = options.locale.clear;\n  }\n  if ('todayButton' in options) {\n    if (options.todayButton) {\n      showElement(picker.controls.todayButton);\n    } else {\n      hideElement(picker.controls.todayButton);\n    }\n  }\n  if ('minDate' in options || 'maxDate' in options) {\n    const {minDate, maxDate} = picker.datepicker.config;\n    picker.controls.todayButton.disabled = !isInRange(today(), minDate, maxDate);\n  }\n  if ('clearButton' in options) {\n    if (options.clearButton) {\n      showElement(picker.controls.clearButton);\n    } else {\n      hideElement(picker.controls.clearButton);\n    }\n  }\n}\n\n// Compute view date to reset, which will be...\n// - the last item of the selected dates or defaultViewDate if no selection\n// - limitted to minDate or maxDate if it exceeds the range\nfunction computeResetViewDate(datepicker) {\n  const {dates, config, rangeSideIndex} = datepicker;\n  const viewDate = dates.length > 0\n    ? lastItemOf(dates)\n    : regularizeDate(config.defaultViewDate, config.pickLevel, rangeSideIndex);\n  return limitToRange(viewDate, config.minDate, config.maxDate);\n}\n\n// Change current view's view date\nfunction setViewDate(picker, newDate) {\n  if (!('_oldViewDate' in picker) && newDate !== picker.viewDate) {\n    picker._oldViewDate = picker.viewDate;\n  }\n  picker.viewDate = newDate;\n\n  // return whether the new date is in different period on time from the one\n  // displayed in the current view\n  // when true, the view needs to be re-rendered on the next UI refresh.\n  const {id, year, first, last} = picker.currentView;\n  const viewYear = new Date(newDate).getFullYear();\n  switch (id) {\n    case 0:\n      return newDate < first || newDate > last;\n    case 1:\n      return viewYear !== year;\n    default:\n      return viewYear < first || viewYear > last;\n  }\n}\n\nfunction getTextDirection(el) {\n  return window.getComputedStyle(el).direction;\n}\n\n// find the closet scrollable ancestor elemnt under the body\nfunction findScrollParents(el) {\n  const parent = getParent(el);\n  if (parent === document.body || !parent) {\n    return;\n  }\n\n  // checking overflow only is enough because computed overflow cannot be\n  // visible or a combination of visible and other when either axis is set\n  // to other than visible.\n  // (Setting one axis to other than 'visible' while the other is 'visible'\n  // results in the other axis turning to 'auto')\n  return window.getComputedStyle(parent).overflow !== 'visible'\n    ? parent\n    : findScrollParents(parent);\n}\n\n// Class representing the picker UI\nexport default class Picker {\n  constructor(datepicker) {\n    const {config, inputField} = this.datepicker = datepicker;\n\n    const template = pickerTemplate.replace(/%buttonClass%/g, config.buttonClass);\n    const element = this.element = parseHTML(template).firstChild;\n    const [header, main, footer] = element.firstChild.children;\n    const title = header.firstElementChild;\n    const [prevButton, viewSwitch, nextButton] = header.lastElementChild.children;\n    const [todayButton, clearButton] = footer.firstChild.children;\n    const controls = {\n      title,\n      prevButton,\n      viewSwitch,\n      nextButton,\n      todayButton,\n      clearButton,\n    };\n    this.main = main;\n    this.controls = controls;\n\n    const elementClass = inputField ? 'dropdown' : 'inline';\n    element.classList.add(`datepicker-${elementClass}`);\n\n    processPickerOptions(this, config);\n    this.viewDate = computeResetViewDate(datepicker);\n\n    // set up event listeners\n    registerListeners(datepicker, [\n      [element, 'mousedown', onMousedownPicker],\n      [main, 'click', onClickView.bind(null, datepicker)],\n      [controls.viewSwitch, 'click', onClickViewSwitch.bind(null, datepicker)],\n      [controls.prevButton, 'click', onClickPrevButton.bind(null, datepicker)],\n      [controls.nextButton, 'click', onClickNextButton.bind(null, datepicker)],\n      [controls.todayButton, 'click', goToOrSelectToday.bind(null, datepicker)],\n      [controls.clearButton, 'click', clearSelection.bind(null, datepicker)],\n    ]);\n\n    // set up views\n    this.views = [\n      new DaysView(this),\n      new MonthsView(this),\n      new YearsView(this, {id: 2, name: 'years', cellClass: 'year', step: 1}),\n      new YearsView(this, {id: 3, name: 'decades', cellClass: 'decade', step: 10}),\n    ];\n    this.currentView = this.views[config.startView];\n\n    this.currentView.render();\n    this.main.appendChild(this.currentView.element);\n    if (config.container) {\n      config.container.appendChild(this.element);\n    } else {\n      inputField.after(this.element);\n    }\n  }\n\n  setOptions(options) {\n    processPickerOptions(this, options);\n    this.views.forEach((view) => {\n      view.init(options, false);\n    });\n    this.currentView.render();\n  }\n\n  detach() {\n    this.element.remove();\n  }\n\n  show() {\n    if (this.active) {\n      return;\n    }\n\n    const {datepicker, element} = this;\n    const inputField = datepicker.inputField;\n    if (inputField) {\n      // ensure picker's direction matches input's\n      const inputDirection = getTextDirection(inputField);\n      if (inputDirection !== getTextDirection(getParent(element))) {\n        element.dir = inputDirection;\n      } else if (element.dir) {\n        element.removeAttribute('dir');\n      }\n\n      // Determine the picker's position first to prevent `orientation: 'auto'`\n      // from being miscalculated to 'bottom' after the picker temporarily\n      // shown below the input field expands the document height if the field\n      // is at the bottom edge of the document\n      this.place();\n      element.classList.add('active');\n\n      if (datepicker.config.disableTouchKeyboard) {\n        inputField.blur();\n      }\n    } else {\n      element.classList.add('active');\n    }\n    this.active = true;\n    triggerDatepickerEvent(datepicker, 'show');\n  }\n\n  hide() {\n    if (!this.active) {\n      return;\n    }\n    this.datepicker.exitEditMode();\n    this.element.classList.remove('active');\n    this.active = false;\n    triggerDatepickerEvent(this.datepicker, 'hide');\n  }\n\n  place() {\n    const {classList, style} = this.element;\n    // temporarily display the picker to get its size and offset parent\n    style.display = 'block';\n\n    const {\n      width: calendarWidth,\n      height: calendarHeight,\n    } = this.element.getBoundingClientRect();\n    const offsetParent = this.element.offsetParent;\n    // turn the picker back to hidden so that the position is determined with\n    // the state before it is shown.\n    style.display = '';\n\n    const {config, inputField} = this.datepicker;\n    const {\n      left: inputLeft,\n      top: inputTop,\n      right: inputRight,\n      bottom: inputBottom,\n      width: inputWidth,\n      height: inputHeight\n    } = inputField.getBoundingClientRect();\n    let {x: orientX, y: orientY} = config.orientation;\n    let left = inputLeft;\n    let top = inputTop;\n\n    // caliculate offsetLeft/Top of inputField\n    if (offsetParent === document.body || !offsetParent) {\n      left += window.scrollX;\n      top += window.scrollY;\n    } else {\n      const offsetParentRect = offsetParent.getBoundingClientRect();\n      left -= offsetParentRect.left - offsetParent.scrollLeft;\n      top -= offsetParentRect.top - offsetParent.scrollTop;\n    }\n\n    // caliculate the boundaries of the visible area that contains inputField\n    const scrollParent = findScrollParents(inputField);\n    let scrollAreaLeft = 0;\n    let scrollAreaTop = 0;\n    let {\n      clientWidth: scrollAreaRight,\n      clientHeight: scrollAreaBottom,\n    } = document.documentElement;\n\n    if (scrollParent) {\n      const scrollParentRect = scrollParent.getBoundingClientRect();\n      if (scrollParentRect.top > 0) {\n        scrollAreaTop = scrollParentRect.top;\n      }\n      if (scrollParentRect.left > 0) {\n        scrollAreaLeft = scrollParentRect.left;\n      }\n      if (scrollParentRect.right < scrollAreaRight) {\n        scrollAreaRight = scrollParentRect.right;\n      }\n      if (scrollParentRect.bottom < scrollAreaBottom) {\n        scrollAreaBottom = scrollParentRect.bottom;\n      }\n    }\n\n    // determine the horizontal orientation and left position\n    let adjustment = 0;\n    if (orientX === 'auto') {\n      if (inputLeft < scrollAreaLeft) {\n        orientX = 'left';\n        adjustment = scrollAreaLeft - inputLeft;\n      } else if (inputLeft + calendarWidth > scrollAreaRight) {\n        orientX = 'right';\n        if (scrollAreaRight < inputRight) {\n          adjustment = scrollAreaRight - inputRight;\n        }\n      } else if (getTextDirection(inputField) === 'rtl') {\n        orientX = inputRight - calendarWidth < scrollAreaLeft ? 'left' : 'right';\n      } else {\n        orientX = 'left';\n      }\n    }\n    if (orientX === 'right') {\n      left += inputWidth - calendarWidth;\n    }\n    left += adjustment;\n\n    // determine the vertical orientation and top position\n    if (orientY === 'auto') {\n      if (inputTop - calendarHeight > scrollAreaTop) {\n        orientY = inputBottom + calendarHeight > scrollAreaBottom ? 'top' : 'bottom';\n      } else {\n        orientY = 'bottom';\n      }\n    }\n    if (orientY === 'top') {\n      top -= calendarHeight;\n    } else {\n      top += inputHeight;\n    }\n\n    classList.remove(...Object.values(orientClasses));\n    classList.add(orientClasses[orientX], orientClasses[orientY]);\n\n    style.left = toPx(left);\n    style.top = toPx(top);\n  }\n\n  setViewSwitchLabel(labelText) {\n    this.controls.viewSwitch.textContent = labelText;\n  }\n\n  setPrevButtonDisabled(disabled) {\n    this.controls.prevButton.disabled = disabled;\n  }\n\n  setNextButtonDisabled(disabled) {\n    this.controls.nextButton.disabled = disabled;\n  }\n\n  changeView(viewId) {\n    const currentView = this.currentView;\n    if (viewId !== currentView.id) {\n      if (!this._oldView) {\n        this._oldView = currentView;\n      }\n      this.currentView = this.views[viewId];\n      this._renderMethod = 'render';\n    }\n    return this;\n  }\n\n  // Change the focused date (view date)\n  changeFocus(newViewDate) {\n    this._renderMethod = setViewDate(this, newViewDate) ? 'render' : 'refreshFocus';\n    this.views.forEach((view) => {\n      view.updateFocus();\n    });\n    return this;\n  }\n\n  // Apply the change of the selected dates\n  update(viewDate = undefined) {\n    const newViewDate = viewDate === undefined\n      ? computeResetViewDate(this.datepicker)\n      : viewDate;\n    this._renderMethod = setViewDate(this, newViewDate) ? 'render' : 'refresh';\n    this.views.forEach((view) => {\n      view.updateFocus();\n      view.updateSelection();\n    });\n    return this;\n  }\n\n  // Refresh the picker UI\n  render(quickRender = true) {\n    const {currentView, datepicker, _oldView: oldView} = this;\n    const oldViewDate = new Date(this._oldViewDate);\n    const renderMethod = (quickRender && this._renderMethod) || 'render';\n    delete this._oldView;\n    delete this._oldViewDate;\n    delete this._renderMethod;\n\n    currentView[renderMethod]();\n    if (oldView) {\n      this.main.replaceChild(currentView.element, oldView.element);\n      triggerDatepickerEvent(datepicker, 'changeView');\n    }\n    if (!isNaN(oldViewDate)) {\n      const newViewDate = new Date(this.viewDate);\n      if (newViewDate.getFullYear() !== oldViewDate.getFullYear()) {\n        triggerDatepickerEvent(datepicker, 'changeYear');\n      }\n      if (newViewDate.getMonth() !== oldViewDate.getMonth()) {\n        triggerDatepickerEvent(datepicker, 'changeMonth');\n      }\n    }\n  }\n}\n", "import {isInRange} from '../lib/utils.js';\nimport {isActiveElement} from '../lib/dom.js';\nimport {addDays, addMonths, addYears} from '../lib/date.js';\nimport {\n  goToPrevOrNext,\n  switchView,\n  clearSelection,\n  goToOrSelectToday,\n  unfocus,\n} from './functions.js';\n\n// Find the closest date that doesn't meet the condition for unavailable date\n// Returns undefined if no available date is found\n// addFn: function to calculate the next date\n//   - args: time value, amount\n// increase: amount to pass to addFn\n// testFn: function to test the unavailability of the date\n//   - args: time value; return: true if unavailable\nfunction findNextAvailableOne(date, addFn, increase, testFn, min, max) {\n  if (!isInRange(date, min, max)) {\n    return;\n  }\n  if (testFn(date)) {\n    const newDate = addFn(date, increase);\n    return findNextAvailableOne(newDate, addFn, increase, testFn, min, max);\n  }\n  return date;\n}\n\n// direction: -1 (left/up), 1 (right/down)\n// vertical: true for up/down, false for left/right\nfunction moveByArrowKey(datepicker, direction, vertical) {\n  const picker = datepicker.picker;\n  const currentView = picker.currentView;\n  const step = currentView.step || 1;\n  let viewDate = picker.viewDate;\n  let addFn;\n  switch (currentView.id) {\n    case 0:\n      viewDate = addDays(viewDate, vertical ? direction * 7 : direction);\n      addFn = addDays;\n      break;\n    case 1:\n      viewDate = addMonths(viewDate, vertical ? direction * 4 : direction);\n      addFn = addMonths;\n      break;\n    default:\n      viewDate = addYears(viewDate, direction * (vertical ? 4 : 1) * step);\n      addFn = addYears;\n  }\n  viewDate = findNextAvailableOne(\n    viewDate,\n    addFn,\n    direction < 0 ? -step : step,\n    (date) => currentView.disabled.includes(date),\n    currentView.minDate,\n    currentView.maxDate\n  );\n  if (viewDate !== undefined) {\n    picker.changeFocus(viewDate).render();\n  }\n}\n\nexport function onKeydown(datepicker, ev) {\n  const {config, picker, editMode} = datepicker;\n  const active = picker.active;\n  const {key, altKey, shiftKey} = ev;\n  const ctrlOrMetaKey = ev.ctrlKey || ev.metaKey;\n  const cancelEvent = () => {\n    ev.preventDefault();\n    ev.stopPropagation();\n  };\n\n  // tab/enter keys should not be taken by shortcut keys\n  if (key === 'Tab') {\n    unfocus(datepicker);\n    return;\n  }\n  if (key === 'Enter') {\n    if (!active) {\n      datepicker.update();\n    } else if (editMode) {\n      datepicker.exitEditMode({update: true, autohide: config.autohide});\n    } else {\n      const currentView = picker.currentView;\n      if (currentView.isMinView) {\n        datepicker.setDate(picker.viewDate);\n      } else {\n        picker.changeView(currentView.id - 1).render();\n        cancelEvent();\n      }\n    }\n    return;\n  }\n\n  const shortcutKeys = config.shortcutKeys;\n  const keyInfo = {key, ctrlOrMetaKey, altKey, shiftKey};\n  const shortcut = Object.keys(shortcutKeys).find((item) => {\n    const keyDef = shortcutKeys[item];\n    return !Object.keys(keyDef).find(prop => keyDef[prop] !== keyInfo[prop]);\n  });\n  if (shortcut) {\n    let action;\n    if (shortcut === 'toggle') {\n      action = shortcut;\n    } else if (editMode) {\n      if (shortcut === 'exitEditMode') {\n        action = shortcut;\n      }\n    } else if (active) {\n      if (shortcut === 'hide') {\n        action = shortcut;\n      } else if (shortcut === 'prevButton') {\n        action = [goToPrevOrNext, [datepicker, -1]];\n      } else if (shortcut === 'nextButton') {\n        action = [goToPrevOrNext, [datepicker, 1]];\n      } else if (shortcut === 'viewSwitch') {\n        action = [switchView, [datepicker]];\n      } else if (config.clearButton && shortcut === 'clearButton') {\n        action = [clearSelection, [datepicker]];\n      } else if (config.todayButton && shortcut === 'todayButton') {\n        action = [goToOrSelectToday, [datepicker]];\n      }\n    } else if (shortcut === 'show') {\n      action = shortcut;\n    }\n    if (action) {\n      if (Array.isArray(action)) {\n        action[0].apply(null, action[1]);\n      } else {\n        datepicker[action]();\n      }\n      cancelEvent();\n      return;\n    }\n  }\n\n  // perform as a regular <input> when picker in hidden or in edit mode\n  if (!active || editMode) {\n    return;\n  }\n\n  const handleArrowKeyPress = (direction, vertical) => {\n    if (shiftKey || ctrlOrMetaKey || altKey) {\n      datepicker.enterEditMode();\n    } else {\n      moveByArrowKey(datepicker, direction, vertical);\n      ev.preventDefault();\n    }\n  };\n\n  if (key === 'ArrowLeft') {\n    handleArrowKeyPress(-1, false);\n  } else if (key === 'ArrowRight') {\n    handleArrowKeyPress(1, false);\n  } else if (key === 'ArrowUp') {\n    handleArrowKeyPress(-1, true);\n  } else if (key === 'ArrowDown') {\n    handleArrowKeyPress(1, true);\n  } else if (\n    key === 'Backspace'\n    || key === 'Delete'\n      // When autofill is performed, Chromium-based browsers trigger fake\n      // keydown/keyup events that don't have the `key` property (on Edge,\n      // keyup only) in addition to the input event. Therefore, we need to\n      // check the existence of `key`'s value before checking the length.\n      // (issue #144)\n    || (key && key.length === 1 && !ctrlOrMetaKey)\n  ) {\n    datepicker.enterEditMode();\n  }\n}\n\nexport function onFocus(datepicker) {\n  if (datepicker.config.showOnFocus && !datepicker._showing) {\n    datepicker.show();\n  }\n}\n\n// for the prevention for entering edit mode while getting focus on click\nexport function onMousedown(datepicker, ev) {\n  const el = ev.target;\n  if (datepicker.picker.active || datepicker.config.showOnClick) {\n    el._active = isActiveElement(el);\n    el._clicking = setTimeout(() => {\n      delete el._active;\n      delete el._clicking;\n    }, 2000);\n  }\n}\n\nexport function onClickInput(datepicker, ev) {\n  const el = ev.target;\n  if (!el._clicking) {\n    return;\n  }\n  clearTimeout(el._clicking);\n  delete el._clicking;\n\n  if (el._active) {\n    datepicker.enterEditMode();\n  }\n  delete el._active;\n\n  if (datepicker.config.showOnClick) {\n    datepicker.show();\n  }\n}\n\nexport function onPaste(datepicker, ev) {\n  if (ev.clipboardData.types.includes('text/plain')) {\n    datepicker.enterEditMode();\n  }\n}\n", "import {isActiveElement} from '../lib/dom.js';\nimport {findElementInEventPath} from '../lib/event.js';\nimport {unfocus} from './functions.js';\n\n// for the `document` to delegate the events from outside the picker/input field\nexport function onClickOutside(datepicker, ev) {\n  const {element, picker} = datepicker;\n  // check both picker's and input's activeness to make updateOnBlur work in\n  // the cases where...\n  // - picker is hidden by ESC key press → input stays focused\n  // - input is unfocused by closing mobile keyboard → piker is kept shown\n  if (!picker.active && !isActiveElement(element)) {\n    return;\n  }\n  const pickerElem = picker.element;\n  if (findElementInEventPath(ev, el => el === element || el === pickerElem)) {\n    return;\n  }\n  unfocus(datepicker);\n}\n", "import {lastItemOf, stringToArray, isInRange} from './lib/utils.js';\nimport {today, regularizeDate} from './lib/date.js';\nimport {parseDate, formatDate} from './lib/date-format.js';\nimport {isActiveElement} from './lib/dom.js';\nimport {registerListeners, unregisterListeners} from './lib/event.js';\nimport locales from './i18n/base-locales.js';\nimport defaultOptions from './options/defaultOptions.js';\nimport processOptions from './options/processOptions.js';\nimport createShortcutKeyConfig from './options/shortcutKeys.js';\nimport Picker from './picker/Picker.js';\nimport {triggerDatepickerEvent} from './events/functions.js';\nimport {\n  onKeydown,\n  onFocus,\n  onMousedown,\n  onClickInput,\n  onPaste,\n} from './events/elementListeners.js';\nimport {onClickOutside} from './events/otherListeners.js';\n\nfunction stringifyDates(dates, config) {\n  return dates\n    .map(dt => formatDate(dt, config.format, config.locale))\n    .join(config.dateDelimiter);\n}\n\n// parse input dates and create an array of time values for selection\n// returns undefined if there are no valid dates in inputDates\n// when origDates (current selection) is passed, the function works to mix\n// the input dates into the current selection\nfunction processInputDates(datepicker, inputDates, clear = false) {\n  if (inputDates.length === 0) {\n    // empty input is considered valid unless origiDates is passed\n    return clear ? [] : undefined;\n  }\n\n  const {config, dates: origDates, rangeSideIndex} = datepicker;\n  const {pickLevel, maxNumberOfDates} = config;\n  let newDates = inputDates.reduce((dates, dt) => {\n    let date = parseDate(dt, config.format, config.locale);\n    if (date === undefined) {\n      return dates;\n    }\n    // adjust to 1st of the month/Jan 1st of the year\n    // or to the last day of the monh/Dec 31st of the year if the datepicker\n    // is the range-end picker of a rangepicker\n    date = regularizeDate(date, pickLevel, rangeSideIndex);\n    if (\n      isInRange(date, config.minDate, config.maxDate)\n      && !dates.includes(date)\n      && !config.checkDisabled(date, pickLevel)\n      && (pickLevel > 0 || !config.daysOfWeekDisabled.includes(new Date(date).getDay()))\n    ) {\n      dates.push(date);\n    }\n    return dates;\n  }, []);\n  if (newDates.length === 0) {\n    return;\n  }\n  if (config.multidate && !clear) {\n    // get the synmetric difference between origDates and newDates\n    newDates = newDates.reduce((dates, date) => {\n      if (!origDates.includes(date)) {\n        dates.push(date);\n      }\n      return dates;\n    }, origDates.filter(date => !newDates.includes(date)));\n  }\n  // do length check always because user can input multiple dates regardless of the mode\n  return maxNumberOfDates && newDates.length > maxNumberOfDates\n    ? newDates.slice(maxNumberOfDates * -1)\n    : newDates;\n}\n\n// refresh the UI elements\n// modes: 1: input only, 2, picker only, 3 both\nfunction refreshUI(datepicker, mode = 3, quickRender = true, viewDate = undefined) {\n  const {config, picker, inputField} = datepicker;\n  if (mode & 2) {\n    const newView = picker.active ? config.pickLevel : config.startView;\n    picker.update(viewDate).changeView(newView).render(quickRender);\n  }\n  if (mode & 1 && inputField) {\n    inputField.value = stringifyDates(datepicker.dates, config);\n  }\n}\n\nfunction setDate(datepicker, inputDates, options) {\n  const config = datepicker.config;\n  let {clear, render, autohide, revert, forceRefresh, viewDate} = options;\n  if (render === undefined) {\n    render = true;\n  }\n  if (!render) {\n    autohide = forceRefresh = false;\n  } else if (autohide === undefined) {\n    autohide = config.autohide;\n  }\n  viewDate = parseDate(viewDate, config.format, config.locale);\n\n  const newDates = processInputDates(datepicker, inputDates, clear);\n  if (!newDates && !revert) {\n    return;\n  }\n  if (newDates && newDates.toString() !== datepicker.dates.toString()) {\n    datepicker.dates = newDates;\n    refreshUI(datepicker, render ? 3 : 1, true, viewDate);\n    triggerDatepickerEvent(datepicker, 'changeDate');\n  } else {\n    refreshUI(datepicker, forceRefresh ? 3 : 1, true, viewDate);\n  }\n\n  if (autohide) {\n    datepicker.hide();\n  }\n}\n\nfunction getOutputConverter(datepicker, format) {\n  return format\n    ? date => formatDate(date, format, datepicker.config.locale)\n    : date => new Date(date);\n}\n\n/**\n * Class representing a date picker\n */\nexport default class Datepicker {\n  /**\n   * Create a date picker\n   * @param  {Element} element - element to bind a date picker\n   * @param  {Object} [options] - config options\n   * @param  {DateRangePicker} [rangepicker] - DateRangePicker instance the\n   * date picker belongs to. Use this only when creating date picker as a part\n   * of date range picker\n   */\n  constructor(element, options = {}, rangepicker = undefined) {\n    element.datepicker = this;\n    this.element = element;\n    this.dates = [];\n\n    // initialize config\n    const config = this.config = Object.assign({\n      buttonClass: (options.buttonClass && String(options.buttonClass)) || 'button',\n      container: null,\n      defaultViewDate: today(),\n      maxDate: undefined,\n      minDate: undefined,\n    }, processOptions(defaultOptions, this));\n\n    // configure by type\n    let inputField;\n    if (element.tagName === 'INPUT') {\n      inputField = this.inputField = element;\n      inputField.classList.add('datepicker-input');\n      if (options.container) {\n        // omit string type check because it doesn't guarantee to avoid errors\n        // (invalid selector string causes abend with sytax error)\n        config.container = options.container instanceof HTMLElement\n          ? options.container\n          : document.querySelector(options.container);\n      }\n    } else {\n      config.container = element;\n    }\n    if (rangepicker) {\n      // check validiry\n      const index = rangepicker.inputs.indexOf(inputField);\n      const datepickers = rangepicker.datepickers;\n      if (index < 0 || index > 1 || !Array.isArray(datepickers)) {\n        throw Error('Invalid rangepicker object.');\n      }\n      // attach itaelf to the rangepicker here so that processInputDates() can\n      // determine if this is the range-end picker of the rangepicker while\n      // setting inital values when pickLevel > 0\n      datepickers[index] = this;\n      this.rangepicker = rangepicker;\n      this.rangeSideIndex = index;\n    }\n\n    // set up config\n    this._options = options;\n    Object.assign(config, processOptions(options, this));\n    config.shortcutKeys = createShortcutKeyConfig(options.shortcutKeys || {});\n\n    // process initial value\n    const initialDates = stringToArray(\n      element.value || element.dataset.date,\n      config.dateDelimiter\n    );\n    delete element.dataset.date;\n    const inputDateValues = processInputDates(this, initialDates);\n    if (inputDateValues && inputDateValues.length > 0) {\n      this.dates = inputDateValues;\n    }\n    if (inputField) {\n      inputField.value = stringifyDates(this.dates, config);\n    }\n\n    // set up picekr element\n    const picker = this.picker = new Picker(this);\n\n    const keydownListener = [element, 'keydown', onKeydown.bind(null, this)];\n    if (inputField) {\n      registerListeners(this, [\n        keydownListener,\n        [inputField, 'focus', onFocus.bind(null, this)],\n        [inputField, 'mousedown', onMousedown.bind(null, this)],\n        [inputField, 'click', onClickInput.bind(null, this)],\n        [inputField, 'paste', onPaste.bind(null, this)],\n        // To detect a click on outside, just listening to mousedown is enough,\n        // no need to listen to touchstart.\n        // Actually, listening to touchstart can be a problem because, while\n        // mousedown is fired only on tapping but not on swiping/pinching,\n        // touchstart is fired on swiping/pinching as well.\n        // (issue #95)\n        [document, 'mousedown', onClickOutside.bind(null, this)],\n        [window, 'resize', picker.place.bind(picker)]\n      ]);\n    } else {\n      registerListeners(this, [keydownListener]);\n      this.show();\n    }\n  }\n\n  /**\n   * Format Date object or time value in given format and language\n   * @param  {Date|Number} date - date or time value to format\n   * @param  {String|Object} format - format string or object that contains\n   * toDisplay() custom formatter, whose signature is\n   * - args:\n   *   - date: {Date} - Date instance of the date passed to the method\n   *   - format: {Object} - the format object passed to the method\n   *   - locale: {Object} - locale for the language specified by `lang`\n   * - return:\n   *     {String} formatted date\n   * @param  {String} [lang=en] - language code for the locale to use\n   * @return {String} formatted date\n   */\n  static formatDate(date, format, lang) {\n    return formatDate(date, format, lang && locales[lang] || locales.en);\n  }\n\n  /**\n   * Parse date string\n   * @param  {String|Date|Number} dateStr - date string, Date object or time\n   * value to parse\n   * @param  {String|Object} format - format string or object that contains\n   * toValue() custom parser, whose signature is\n   * - args:\n   *   - dateStr: {String|Date|Number} - the dateStr passed to the method\n   *   - format: {Object} - the format object passed to the method\n   *   - locale: {Object} - locale for the language specified by `lang`\n   * - return:\n   *     {Date|Number} parsed date or its time value\n   * @param  {String} [lang=en] - language code for the locale to use\n   * @return {Number} time value of parsed date\n   */\n  static parseDate(dateStr, format, lang) {\n    return parseDate(dateStr, format, lang && locales[lang] || locales.en);\n  }\n\n  /**\n   * @type {Object} - Installed locales in `[languageCode]: localeObject` format\n   * en`:_English (US)_ is pre-installed.\n   */\n  static get locales() {\n    return locales;\n  }\n\n  /**\n   * @type {Boolean} - Whether the picker element is shown. `true` whne shown\n   */\n  get active() {\n    return !!(this.picker && this.picker.active);\n  }\n\n  /**\n   * @type {HTMLDivElement} - DOM object of picker element\n   */\n  get pickerElement() {\n    return this.picker ? this.picker.element : undefined;\n  }\n\n  /**\n   * Set new values to the config options\n   * @param {Object} options - config options to update\n   */\n  setOptions(options) {\n    const newOptions = processOptions(options, this);\n    Object.assign(this._options, options);\n    Object.assign(this.config, newOptions);\n    this.picker.setOptions(newOptions);\n\n    refreshUI(this, 3);\n  }\n\n  /**\n   * Show the picker element\n   */\n  show() {\n    if (this.inputField) {\n      const {config, inputField} = this;\n      if (inputField.disabled || (inputField.readOnly && !config.enableOnReadonly)) {\n        return;\n      }\n      if (!isActiveElement(inputField) && !config.disableTouchKeyboard) {\n        this._showing = true;\n        inputField.focus();\n        delete this._showing;\n      }\n    }\n    this.picker.show();\n  }\n\n  /**\n   * Hide the picker element\n   * Not available on inline picker\n   */\n  hide() {\n    if (!this.inputField) {\n      return;\n    }\n    this.picker.hide();\n    this.picker.update().changeView(this.config.startView).render();\n  }\n\n  /**\n   * Toggle the display of the picker element\n   * Not available on inline picker\n   *\n   * Unlike hide(), the picker does not return to the start view when hiding.\n   */\n  toggle() {\n    if (!this.picker.active) {\n      this.show();\n    } else if (this.inputField) {\n      this.picker.hide();\n    }\n  }\n\n  /**\n   * Destroy the Datepicker instance\n   * @return {Detepicker} - the instance destroyed\n   */\n  destroy() {\n    this.hide();\n    unregisterListeners(this);\n    this.picker.detach();\n    const element = this.element;\n    element.classList.remove('datepicker-input');\n    delete element.datepicker;\n    return this;\n  }\n\n  /**\n   * Get the selected date(s)\n   *\n   * The method returns a Date object of selected date by default, and returns\n   * an array of selected dates in multidate mode. If format string is passed,\n   * it returns date string(s) formatted in given format.\n   *\n   * @param  {String} [format] - format string to stringify the date(s)\n   * @return {Date|String|Date[]|String[]} - selected date(s), or if none is\n   * selected, empty array in multidate mode and undefined in sigledate mode\n   */\n  getDate(format = undefined) {\n    const callback = getOutputConverter(this, format);\n\n    if (this.config.multidate) {\n      return this.dates.map(callback);\n    }\n    if (this.dates.length > 0) {\n      return callback(this.dates[0]);\n    }\n  }\n\n  /**\n   * Set selected date(s)\n   *\n   * In multidate mode, you can pass multiple dates as a series of arguments\n   * or an array. (Since each date is parsed individually, the type of the\n   * dates doesn't have to be the same.)\n   * The given dates are used to toggle the select status of each date. The\n   * number of selected dates is kept from exceeding the length set to\n   * maxNumberOfDates.\n   *\n   * With clear: true option, the method can be used to clear the selection\n   * and to replace the selection instead of toggling in multidate mode.\n   * If the option is passed with no date arguments or an empty dates array,\n   * it works as \"clear\" (clear the selection then set nothing), and if the\n   * option is passed with new dates to select, it works as \"replace\" (clear\n   * the selection then set the given dates)\n   *\n   * When render: false option is used, the method omits re-rendering the\n   * picker element. In this case, you need to call refresh() method later in\n   * order for the picker element to reflect the changes. The input field is\n   * refreshed always regardless of this option.\n   *\n   * When invalid (unparsable, repeated, disabled or out-of-range) dates are\n   * passed, the method ignores them and applies only valid ones. In the case\n   * that all the given dates are invalid, which is distinguished from passing\n   * no dates, the method considers it as an error and leaves the selection\n   * untouched. (The input field also remains untouched unless revert: true\n   * option is used.)\n   * Replacing the selection with the same date(s) also causes a similar\n   * situation. In both cases, the method does not refresh the picker element\n   * unless forceRefresh: true option is used.\n   *\n   * If viewDate option is used, the method changes the focused date to the\n   * specified date instead of the last item of the selection.\n   *\n   * @param {...(Date|Number|String)|Array} [dates] - Date strings, Date\n   * objects, time values or mix of those for new selection\n   * @param {Object} [options] - function options\n   * - clear: {boolean} - Whether to clear the existing selection\n   *     defualt: false\n   * - render: {boolean} - Whether to re-render the picker element\n   *     default: true\n   * - autohide: {boolean} - Whether to hide the picker element after re-render\n   *     Ignored when used with render: false\n   *     default: config.autohide\n   * - revert: {boolean} - Whether to refresh the input field when all the\n   *     passed dates are invalid\n   *     default: false\n   * - forceRefresh: {boolean} - Whether to refresh the picker element when\n   *     passed dates don't change the existing selection\n   *     default: false\n   * - viewDate: {Date|Number|String} - Date to be focused after setiing date(s)\n   *     default: The last item of the resulting selection, or defaultViewDate\n   *     config option if none is selected\n   */\n  setDate(...args) {\n    const dates = [...args];\n    const opts = {};\n    const lastArg = lastItemOf(args);\n    if (\n      lastArg\n      && typeof lastArg === 'object'\n      && !Array.isArray(lastArg)\n      && !(lastArg instanceof Date)\n    ) {\n      Object.assign(opts, dates.pop());\n    }\n\n    const inputDates = Array.isArray(dates[0]) ? dates[0] : dates;\n    setDate(this, inputDates, opts);\n  }\n\n  /**\n   * Update the selected date(s) with input field's value\n   * Not available on inline picker\n   *\n   * The input field will be refreshed with properly formatted date string.\n   *\n   * In the case that all the entered dates are invalid (unparsable, repeated,\n   * disabled or out-of-range), which is distinguished from empty input field,\n   * the method leaves the input field untouched as well as the selection by\n   * default. If revert: true option is used in this case, the input field is\n   * refreshed with the existing selection.\n   * The method also doesn't refresh the picker element in this case and when\n   * the entered dates are the same as the existing selection. If\n   * forceRefresh: true option is used, the picker element is refreshed in\n   * these cases too.\n   *\n   * @param  {Object} [options] - function options\n   * - autohide: {boolean} - whether to hide the picker element after refresh\n   *     default: false\n   * - revert: {boolean} - Whether to refresh the input field when all the\n   *     passed dates are invalid\n   *     default: false\n   * - forceRefresh: {boolean} - Whether to refresh the picer element when\n   *     input field's value doesn't change the existing selection\n   *     default: false\n   */\n  update(options = undefined) {\n    if (!this.inputField) {\n      return;\n    }\n\n    const opts = Object.assign(options || {}, {clear: true, render: true, viewDate: undefined});\n    const inputDates = stringToArray(this.inputField.value, this.config.dateDelimiter);\n    setDate(this, inputDates, opts);\n  }\n\n  /**\n   * Get the focused date\n   *\n   * The method returns a Date object of focused date by default. If format\n   * string is passed, it returns date string formatted in given format.\n   *\n   * @param  {String} [format] - format string to stringify the date\n   * @return {Date|String} - focused date (viewDate)\n   */\n  getFocusedDate(format = undefined) {\n    return getOutputConverter(this, format)(this.picker.viewDate);\n  }\n\n  /**\n   * Set focused date\n   *\n   * By default, the method updates the focus on the view shown at the time,\n   * or the one set to the startView config option if the picker is hidden.\n   * When resetView: true is passed, the view displayed is changed to the\n   * pickLevel config option's if the picker is shown.\n   *\n   * @param {Date|Number|String} viewDate - date string, Date object, time\n   * values of the date to focus\n   * @param {Boolean} [resetView] - whether to change the view to pickLevel\n   * config option's when the picker is shown. Ignored when the picker is\n   * hidden\n   */\n  setFocusedDate(viewDate, resetView = false) {\n    const {config, picker, active, rangeSideIndex} = this;\n    const pickLevel = config.pickLevel;\n    const newViewDate = parseDate(viewDate, config.format, config.locale);\n    if (newViewDate === undefined) {\n      return;\n    }\n\n    picker.changeFocus(regularizeDate(newViewDate, pickLevel, rangeSideIndex));\n    if (active && resetView) {\n      picker.changeView(pickLevel);\n    }\n    picker.render();\n  }\n\n  /**\n   * Refresh the picker element and the associated input field\n   * @param {String} [target] - target item when refreshing one item only\n   * 'picker' or 'input'\n   * @param {Boolean} [forceRender] - whether to re-render the picker element\n   * regardless of its state instead of optimized refresh\n   */\n  refresh(target = undefined, forceRender = false) {\n    if (target && typeof target !== 'string') {\n      forceRender = target;\n      target = undefined;\n    }\n\n    let mode;\n    if (target === 'picker') {\n      mode = 2;\n    } else if (target === 'input') {\n      mode = 1;\n    } else {\n      mode = 3;\n    }\n    refreshUI(this, mode, !forceRender);\n  }\n\n  /**\n   * Enter edit mode\n   * Not available on inline picker or when the picker element is hidden\n   */\n  enterEditMode() {\n    const inputField = this.inputField;\n    if (!inputField || inputField.readOnly || !this.picker.active || this.editMode) {\n      return;\n    }\n    this.editMode = true;\n    inputField.classList.add('in-edit');\n  }\n\n  /**\n   * Exit from edit mode\n   * Not available on inline picker\n   * @param  {Object} [options] - function options\n   * - update: {boolean} - whether to call update() after exiting\n   *     If false, input field is revert to the existing selection\n   *     default: false\n   */\n  exitEditMode(options = undefined) {\n    if (!this.inputField || !this.editMode) {\n      return;\n    }\n    const opts = Object.assign({update: false}, options);\n    delete this.editMode;\n    this.inputField.classList.remove('in-edit');\n    if (opts.update) {\n      this.update(opts);\n    }\n  }\n}\n", "import {registerListeners, unregisterListeners} from './lib/event.js';\nimport {formatDate} from './lib/date-format.js';\nimport Datepicker from './Datepicker.js';\n\n// filter out the config options inapproprite to pass to Datepicker\nfunction filterOptions(options) {\n  const newOpts = Object.assign({}, options);\n\n  delete newOpts.inputs;\n  delete newOpts.allowOneSidedRange;\n  delete newOpts.maxNumberOfDates; // to ensure each datepicker handles a single date\n\n  return newOpts;\n}\n\nfunction setupDatepicker(rangepicker, changeDateListener, el, options) {\n  registerListeners(rangepicker, [\n    [el, 'changeDate', changeDateListener],\n  ]);\n  new Datepicker(el, options, rangepicker);\n}\n\nfunction onChangeDate(rangepicker, ev) {\n  // to prevent both datepickers trigger the other side's update each other\n  if (rangepicker._updating) {\n    return;\n  }\n  rangepicker._updating = true;\n\n  const target = ev.target;\n  if (target.datepicker === undefined) {\n    return;\n  }\n\n  const datepickers = rangepicker.datepickers;\n  const [datepicker0, datepicker1] = datepickers;\n  const setDateOptions = {render: false};\n  const changedSide = rangepicker.inputs.indexOf(target);\n  const otherSide = changedSide === 0 ? 1 : 0;\n  const changedDate = datepickers[changedSide].dates[0];\n  const otherDate = datepickers[otherSide].dates[0];\n\n  if (changedDate !== undefined && otherDate !== undefined) {\n    // if the start of the range > the end, swap them\n    if (changedSide === 0 && changedDate > otherDate) {\n      datepicker0.setDate(otherDate, setDateOptions);\n      datepicker1.setDate(changedDate, setDateOptions);\n    } else if (changedSide === 1 && changedDate < otherDate) {\n      datepicker0.setDate(changedDate, setDateOptions);\n      datepicker1.setDate(otherDate, setDateOptions);\n    }\n  } else if (!rangepicker.allowOneSidedRange) {\n    // to prevent the range from becoming one-sided, copy changed side's\n    // selection (no matter if it's empty) to the other side\n    if (changedDate !== undefined || otherDate !== undefined) {\n      setDateOptions.clear = true;\n      datepickers[otherSide].setDate(datepickers[changedSide].dates, setDateOptions);\n    }\n  }\n  datepickers.forEach((datepicker) => {\n    datepicker.picker.update().render();\n  });\n  delete rangepicker._updating;\n}\n\n/**\n * Class representing a date range picker\n */\nexport default class DateRangePicker  {\n  /**\n   * Create a date range picker\n   * @param  {Element} element - element to bind a date range picker\n   * @param  {Object} [options] - config options\n   */\n  constructor(element, options = {}) {\n    let inputs = Array.isArray(options.inputs)\n      ? options.inputs\n      : Array.from(element.querySelectorAll('input'));\n    if (inputs.length < 2) {\n      return;\n    }\n\n    element.rangepicker = this;\n    this.element = element;\n    this.inputs = inputs = inputs.slice(0, 2);\n    Object.freeze(inputs);\n    this.allowOneSidedRange = !!options.allowOneSidedRange;\n\n    const changeDateListener = onChangeDate.bind(null, this);\n    const cleanOptions = filterOptions(options);\n    // in order for initial date setup to work right when pcicLvel > 0,\n    // let Datepicker constructor add the instance to the rangepicker\n    const datepickers = this.datepickers = [];\n    inputs.forEach((input) => {\n      setupDatepicker(this, changeDateListener, input, cleanOptions);\n    });\n    Object.freeze(datepickers);\n    Object.defineProperty(this, 'dates', {\n      get() {\n        return datepickers.map(datepicker => datepicker.dates[0]);\n      },\n    });\n    // normalize the range if inital dates are given\n    if (datepickers[0].dates.length > 0) {\n      onChangeDate(this, {target: inputs[0]});\n    } else if (datepickers[1].dates.length > 0) {\n      onChangeDate(this, {target: inputs[1]});\n    }\n  }\n\n  /**\n   * Set new values to the config options\n   * @param {Object} options - config options to update\n   */\n  setOptions(options) {\n    this.allowOneSidedRange = !!options.allowOneSidedRange;\n\n    const cleanOptions = filterOptions(options);\n    this.datepickers.forEach((datepicker) => {\n      datepicker.setOptions(cleanOptions);\n    });\n  }\n\n  /**\n   * Destroy the DateRangePicker instance\n   * @return {DateRangePicker} - the instance destroyed\n   */\n  destroy() {\n    this.datepickers.forEach((datepicker) => {\n      datepicker.destroy();\n    });\n    unregisterListeners(this);\n    delete this.element.rangepicker;\n  }\n\n  /**\n   * Get the start and end dates of the date range\n   *\n   * The method returns Date objects by default. If format string is passed,\n   * it returns date strings formatted in given format.\n   * The result array always contains 2 items (start date/end date) and\n   * undefined is used for unselected side. (e.g. If none is selected,\n   * the result will be [undefined, undefined]. If only the end date is set\n   * when allowOneSidedRange config option is true, [undefined, endDate] will\n   * be returned.)\n   *\n   * @param  {String} [format] - Format string to stringify the dates\n   * @return {Array} - Start and end dates\n   */\n  getDates(format = undefined) {\n    const callback = format\n      ? date => formatDate(date, format, this.datepickers[0].config.locale)\n      : date => new Date(date);\n\n    return this.dates.map(date => date === undefined ? date : callback(date));\n  }\n\n  /**\n   * Set the start and end dates of the date range\n   *\n   * The method calls datepicker.setDate() internally using each of the\n   * arguments in start→end order.\n   *\n   * When a clear: true option object is passed instead of a date, the method\n   * clears the date.\n   *\n   * If an invalid date, the same date as the current one or an option object\n   * without clear: true is passed, the method considers that argument as an\n   * \"ineffective\" argument because calling datepicker.setDate() with those\n   * values makes no changes to the date selection.\n   *\n   * When the allowOneSidedRange config option is false, passing {clear: true}\n   * to clear the range works only when it is done to the last effective\n   * argument (in other words, passed to rangeEnd or to rangeStart along with\n   * ineffective rangeEnd). This is because when the date range is changed,\n   * it gets normalized based on the last change at the end of the changing\n   * process.\n   *\n   * @param {Date|Number|String|Object} rangeStart - Start date of the range\n   * or {clear: true} to clear the date\n   * @param {Date|Number|String|Object} rangeEnd - End date of the range\n   * or {clear: true} to clear the date\n   */\n  setDates(rangeStart, rangeEnd) {\n    const {\n      datepickers: [datepicker0, datepicker1],\n      inputs: [input0, input1],\n      dates: [origDate0, origDate1],\n    } = this;\n\n    // If range normalization runs on every change, we can't set a new range\n    // that starts after the end of the current range correctly because the\n    // normalization process swaps start↔︎end right after setting the new start\n    // date. To prevent this, the normalization process needs to run once after\n    // both of the new dates are set.\n    this._updating = true;\n    datepicker0.setDate(rangeStart);\n    datepicker1.setDate(rangeEnd);\n    delete this._updating;\n\n    if (datepicker1.dates[0] !== origDate1) {\n      onChangeDate(this, {target: input1});\n    } else if (datepicker0.dates[0] !== origDate0) {\n      onChangeDate(this, {target: input0});\n    }\n  }\n}\n"],
  "mappings": "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",
  "names": ["range", "range", "range", "range"]
}
